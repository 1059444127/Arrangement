<?xml version="1.0"?>
<doc>
  <assembly>
    <name>C1.Win.C1Report.4</name>
  </assembly>
  <members>
    <member name="T:C1.Win.C1Preview.C1PreviewActionEnum">
      <summary>
            Defines the supported preview tool items.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.None">
      <summary>
            No tool.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.FileOpen">
      <summary>
            File open button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.FileSave">
      <summary>
            File save button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.Parameters">
      <summary>
            SSRS report parameters.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.PrintLayout">
      <summary>
            SSRS print layout mode.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.PageSetup">
      <summary>
            Page setup button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.Print">
      <summary>
            Document print button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.Reflow">
      <summary>
            Document reflow button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.Stop">
      <summary>
            Stop long operation.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.PageSingle">
      <summary>
            Single page view button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.PageContinuous">
      <summary>
            Continuous page view button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.PageFacing">
      <summary>
            Facing page view button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.PageFacingContinuous">
      <summary>
            Facing continuous page view button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.NavigationPane">
      <summary>
            Show Navigation pane.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.GoFirst">
      <summary>
            Go to the first page button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.GoPrev">
      <summary>
            Go to the previous page button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.GoNext">
      <summary>
            Go to the next page button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.GoLast">
      <summary>
            Go to the last page button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.HistoryNext">
      <summary>
            History forward button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.HistoryPrev">
      <summary>
            History backward button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.GoPageLabel">
      <summary>
            Page label ("Page").
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.GoPageNumber">
      <summary>
            Page number text box.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.GoPageCount">
      <summary>
            Total page count label ("of {0}").
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.ZoomIn">
      <summary>
            Zoom in button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.ZoomOut">
      <summary>
            Zoom out button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.ZoomFactor">
      <summary>
            Zoom factor text box.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.ZoomInTool">
      <summary>
            Zoom in tool.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.ZoomOutTool">
      <summary>
            Zoom out tool.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.HandTool">
      <summary>
            Hand tool.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.SelectTextTool">
      <summary>
            Text select tool.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.Find">
      <summary>
            Find text button.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.SearchLabel">
      <summary>
            Find label ("Find:").
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.SearchText">
      <summary>
            Text to be searched.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.SearchNext">
      <summary>
            Find the next occurrence.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.SearchPrevious">
      <summary>
            Find the previous occurrence.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.MatchCase">
      <summary>
            Match case.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.MatchWholeWord">
      <summary>
            Match whole word.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionEnum.CloseSearch">
      <summary>
            Hide search toolbar.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PreviewActionFlags">
      <summary>
            Specifies flags that can be used to group, enable and disable
            preview actions (see <see cref="T:C1.Win.C1Preview.C1PreviewActionEnum" />).
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.None">
      <summary>
            No operation.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.FileOpen">
      <summary>
            File open.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.FileSave">
      <summary>
            File save.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.Parameters">
      <summary>
            SSRS parameters.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.PrintLayout">
      <summary>
            SSRS report print layout mode.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.PageSetup">
      <summary>
            Page setup.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.Print">
      <summary>
            Print document.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.Reflow">
      <summary>
            Reflow document.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.Stop">
      <summary>
            Stop long operation.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.File">
      <summary>
            File operations (combination of <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.FileOpen" />, <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.FileSave" />, <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.Parameters" />, <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.PrintLayout" />,
            <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.PageSetup" />, <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.Print" />, <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.Reflow" />, and <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.Stop" />).
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.PageSingle">
      <summary>
            Single page view.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.PageContinuous">
      <summary>
            Continuous page view.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.PageFacing">
      <summary>
            Facing page view.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.PageFacingContinuous">
      <summary>
            Continuous facing page view.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.PageView">
      <summary>
            Page view operations (combination of <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.PageSingle" />, <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.PageContinuous" />,
            <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.PageFacing" /> and <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.PageFacingContinuous" />).
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.GoFirst">
      <summary>
            Go to first page.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.GoPrev">
      <summary>
            Go to previous page.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.GoNext">
      <summary>
            Go to next page.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.GoLast">
      <summary>
            Go to last page.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.GoPage">
      <summary>
            Go to specified page.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.HistoryNext">
      <summary>
            Go forward in history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.HistoryPrev">
      <summary>
            Go back in history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.NavigationPane">
      <summary>
            Show Navigation pane.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.Navigation">
      <summary>
            Navigation operations (combination of <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.GoFirst" />, <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.GoPrev" />,
            <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.GoNext" />, <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.GoLast" />, <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.GoPage" />,
            <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.HistoryNext" /> and <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.HistoryPrev" />).
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.ZoomIn">
      <summary>
            Zoom in.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.ZoomOut">
      <summary>
            Zoom out.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.ZoomFactor">
      <summary>
            Zoom factor.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.ZoomInTool">
      <summary>
            Zoom in tool.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.ZoomOutTool">
      <summary>
            Zoom out tool.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.Zoom">
      <summary>
            Zoom operations (combination of <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.ZoomIn" />, <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.ZoomOut" />,
            <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.ZoomFactor" />, <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.ZoomInTool" /> and <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.ZoomOutTool" />).
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.HandTool">
      <summary>
            Hand tool.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.SelectTextTool">
      <summary>
            Text select tool.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.Find">
      <summary>
            Find text.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.Text">
      <summary>
            Text operations (combination of <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.HandTool" />,
            <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.SelectTextTool" /> and <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.Find" />).
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.SearchText">
      <summary>
            Text to be searched.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.StartSearch">
      <summary>
            Start search.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.SearchPrevious">
      <summary>
            Find the previous occurrence.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.SearchNext">
      <summary>
            Find the next occurrence.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.MatchCase">
      <summary>
            Match case.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.MatchWholeWord">
      <summary>
            Match whole word.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.CloseSearch">
      <summary>
            Hide search toolbar.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.Search">
      <summary>
            All operations related to search.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewActionFlags.All">
      <summary>
            All operations (combination of <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.File" />, <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.PageView" />, <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.Navigation" />,
            <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.Zoom" />, <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.Text" />, and <see cref="F:C1.Win.C1Preview.C1PreviewActionFlags.Search" />).
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PreviewAction">
      <summary>
            Describes a predefined action available in the preview to the end user
            (e.g. file open or zoom in).
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewAction.ActionFromTag(System.String)">
      <summary>
            Returns a <see cref="T:C1.Win.C1Preview.C1PreviewActionEnum" /> value corresponding
            to a tag string associated with a UI element. 
            When <see cref="T:C1.Win.C1Preview.C1PrintPreviewControl" />'s UI elements (such as toolbar items)
            are created, their <see cref="P:System.Windows.Forms.Control.Tag" /> properties are assigned predefined
            strings that determine actions performed when those elements are invoked.
            This method allows to find out the specific action associated with a tag.
            </summary>
      <param name="tag">The tag string.</param>
      <returns>A <see cref="T:C1.Win.C1Preview.C1PreviewActionEnum" /> represening the action
            associated with <paramref name="tag" />.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewAction.GetImage(C1.Win.C1Preview.ImageSetEnum,C1.Win.C1Preview.C1PreviewActionEnum)">
      <summary>
            Gets one of the predefined images representing the specified action.
            </summary>
      <param name="imageSet">The image set to use.</param>
      <param name="action">The action to return the image for.</param>
      <returns>The image from the specified image set representing
            the specified action, or <b>null</b> if the action has no corresponding image.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewAction.FromAction(C1.Win.C1Preview.C1PreviewActionEnum)">
      <summary>
            Creates a <see cref="T:C1.Win.C1Preview.C1PreviewAction" /> object corresponding
            to the specified action, using the <see cref="F:C1.Win.C1Preview.ImageSetEnum.Classic" />
            image set.
            </summary>
      <param name="action">A <see cref="T:C1.Win.C1Preview.C1PreviewActionEnum" /> value representing the action.</param>
      <returns>A <see cref="T:C1.Win.C1Preview.C1PreviewAction" /> object representing the action.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewAction.FromTag(System.String)">
      <summary>
            Creates a <see cref="T:C1.Win.C1Preview.C1PreviewAction" /> object corresponding
            to the specified string tag value (see <see cref="M:C1.Win.C1Preview.C1PreviewAction.ActionFromTag(System.String)" />
            for details).
            </summary>
      <param name="tag">The tag string.</param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewAction.ActionFlags(C1.Win.C1Preview.C1PreviewActionEnum)">
      <summary>
            Retrieves the combination of <see cref="T:C1.Win.C1Preview.C1PreviewActionFlags" />
            for the specified action.
            </summary>
      <param name="action">The action to get the flags for.</param>
      <returns>The combination of flags corresponding to <paramref name="action" />.</returns>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewAction.Action">
      <summary>
            Gets the <see cref="T:C1.Win.C1Preview.C1PreviewActionEnum" /> value corresponding to the current action.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewAction.Tag">
      <summary>
            Gets the tag string corresponding to the current action.
            This string (assigned to the <see cref="P:System.Windows.Forms.Control.Tag" />)
            identifies UI elements (such as toolbar buttons) associated with the current action.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewAction.Image">
      <summary>
            Gets the image corresponding to the current action.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewAction.Text">
      <summary>
            Gets the text corresponding to the current action.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewAction.ToolTip">
      <summary>
            Gets the tooltip corresponding to the current action.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewAction.Flags">
      <summary>
            Gets the combination of <see cref="T:C1.Win.C1Preview.C1PreviewActionFlags" />
            associated with the current action.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PreviewCursors">
      <summary>
            Holds the cursors used by <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.C1PreviewCursors" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializeHandHover">
      <summary>
            Tests whether the HandHover property should be serialized.
            </summary>
      <returns>True if HandHover should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetHandHover">
      <summary>
            Resets the HandHover property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializeHandGrab">
      <summary>
            Tests whether the HandGrab property should be serialized.
            </summary>
      <returns>True if HandGrab should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetHandGrab">
      <summary>
            Resets the HandGrab property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializeZoomIn">
      <summary>
            Tests whether the ZoomIn property should be serialized.
            </summary>
      <returns>True if ZoomIn should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetZoomIn">
      <summary>
            Resets the ZoomIn property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializeZoomOut">
      <summary>
            Tests whether the ZoomOut property should be serialized.
            </summary>
      <returns>True if ZoomOut should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetZoomOut">
      <summary>
            Resets the ZoomOut property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializeZoomNone">
      <summary>
            Tests whether the ZoomNone property should be serialized.
            </summary>
      <returns>True if ZoomNone should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetZoomNone">
      <summary>
            Resets the ZoomNone property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializeMarginsHide">
      <summary>
            Tests whether the MarginsHide property should be serialized.
            </summary>
      <returns>True if MarginsHide should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetMarginsHide">
      <summary>
            Resets the MarginsHide property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializeMarginsShow">
      <summary>
            Tests whether the MarginsShow property should be serialized.
            </summary>
      <returns>True if MarginsShow should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetMarginsShow">
      <summary>
            Resets the MarginsShow property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializeMarginsHideH">
      <summary>
            Tests whether the MarginsHideH property should be serialized.
            </summary>
      <returns>True if MarginsHideH should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetMarginsHideH">
      <summary>
            Resets the MarginsHideH property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializeMarginsShowH">
      <summary>
            Tests whether the MarginsShowH property should be serialized.
            </summary>
      <returns>True if MarginsShowH should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetMarginsShowH">
      <summary>
            Resets the MarginsShowH property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializeMarginsHideV">
      <summary>
            Tests whether the MarginsHideV property should be serialized.
            </summary>
      <returns>True if MarginsHideV should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetMarginsHideV">
      <summary>
            Resets the MarginsHideV property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializeMarginsShowV">
      <summary>
            Tests whether the MarginsShowV property should be serialized.
            </summary>
      <returns>True if MarginsShowV should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetMarginsShowV">
      <summary>
            Resets the MarginsShowV property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializePanMarker">
      <summary>
            Tests whether the PanMarker property should be serialized.
            </summary>
      <returns>True if PanMarker should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetPanMarker">
      <summary>
            Resets the PanMarker property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializePanMarkerNS">
      <summary>
            Tests whether the PanMarkerNS property should be serialized.
            </summary>
      <returns>True if PanMarkerNS should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetPanMarkerNS">
      <summary>
            Resets the PanMarkerNS property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializePanMarkerEW">
      <summary>
            Tests whether the PanMarkerEW property should be serialized.
            </summary>
      <returns>True if PanMarkerEW should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetPanMarkerEW">
      <summary>
            Resets the PanMarkerEW property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializePanMarkerN">
      <summary>
            Tests whether the PanMarkerN property should be serialized.
            </summary>
      <returns>True if PanMarkerN should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetPanMarkerN">
      <summary>
            Resets the PanMarkerN property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializePanMarkerS">
      <summary>
            Tests whether the PanMarkerS property should be serialized.
            </summary>
      <returns>True if PanMarkerS should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetPanMarkerS">
      <summary>
            Resets the PanMarkerS property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializePanMarkerE">
      <summary>
            Tests whether the PanMarkerE property should be serialized.
            </summary>
      <returns>True if PanMarkerE should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetPanMarkerE">
      <summary>
            Resets the PanMarkerE property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializePanMarkerW">
      <summary>
            Tests whether the PanMarkerW property should be serialized.
            </summary>
      <returns>True if PanMarkerW should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetPanMarkerW">
      <summary>
            Resets the PanMarkerW property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializePanMarkerNE">
      <summary>
            Tests whether the PanMarkerNE property should be serialized.
            </summary>
      <returns>True if PanMarkerNE should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetPanMarkerNE">
      <summary>
            Resets the PanMarkerNE property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializePanMarkerSE">
      <summary>
            Tests whether the PanMarkerSE property should be serialized.
            </summary>
      <returns>True if PanMarkerSE should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetPanMarkerSE">
      <summary>
            Resets the PanMarkerSE property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializePanMarkerNW">
      <summary>
            Tests whether the PanMarkerNW property should be serialized.
            </summary>
      <returns>True if PanMarkerNW should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetPanMarkerNW">
      <summary>
            Resets the PanMarkerNW property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ShouldSerializePanMarkerSW">
      <summary>
            Tests whether the PanMarkerSW property should be serialized.
            </summary>
      <returns>True if PanMarkerSW should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewCursors.ResetPanMarkerSW">
      <summary>
            Resets the PanMarkerSW property to the default value.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.HandHover">
      <summary>
            Gets or sets the hand hovering cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.HandGrab">
      <summary>
            Gets or sets the hand grabbing cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.ZoomIn">
      <summary>
            Gets or sets the zoom in cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.ZoomOut">
      <summary>
            Gets or sets the zoom out cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.ZoomNone">
      <summary>
            Gets or sets the zoom disabled cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.MarginsHide">
      <summary>
            Gets or sets the hide margins cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.MarginsShow">
      <summary>
            Gets or sets the show margins cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.MarginsHideH">
      <summary>
            Gets or sets the hide horizontal margins cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.MarginsShowH">
      <summary>
            Gets or sets the show horizontal margins cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.MarginsHideV">
      <summary>
            Gets or sets the hide vertical margins cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.MarginsShowV">
      <summary>
            Gets or sets the show vertical margins cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.PanMarker">
      <summary>
            Gets or sets the pan marker cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.PanMarkerNS">
      <summary>
            Gets or sets the pan marker (north-south) cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.PanMarkerEW">
      <summary>
            Gets or sets the pan marker (east-west) cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.PanMarkerN">
      <summary>
            Gets or sets the pan marker (north) cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.PanMarkerS">
      <summary>
            Gets or sets the pan marker (south) cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.PanMarkerE">
      <summary>
            Gets or sets the pan marker (east) cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.PanMarkerW">
      <summary>
            Gets or sets the pan marker (west) cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.PanMarkerNE">
      <summary>
            Gets or sets the pan marker (north-east) cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.PanMarkerSE">
      <summary>
            Gets or sets the pan marker (south-east) cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.PanMarkerNW">
      <summary>
            Gets or sets the pan marker (north-west) cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewCursors.PanMarkerSW">
      <summary>
            Gets or sets the pan marker (south-west) cursor.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PreviewFileActions">
      <summary>
            Encapsulates file-related operations available in preview.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewFileActions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.C1PreviewFileActions" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewFileActions.#ctor(System.Object,C1.Win.C1Preview.ExportOptions)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.C1PreviewFileActions" /> class.
            </summary>
      <param name="document">The current preview document.</param>
      <param name="exportOptions">Export options.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewFileActions.FileOpen(System.String,System.Boolean)">
      <summary>
            Loads the document from a specified file. If the file does not exist
            uses its directory as the initial directory for the "open file" dialog.
            </summary>
      <param name="fileName">The name of the file to open.</param>
      <param name="showErrorMessage">If <b>true</b>, error message is shown if an exception occurs,
            otherwise the exception is rethrown.</param>
      <returns>The opened document or <b>null</b> if operation was cancelled,
            or if <paramref name="showErrorMessage" /> is <b>true</b> and an error occurred while loading the document.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewFileActions.FileOpen(System.String)">
      <summary>
            Loads the document from a specified file. If the file does not exist
            uses its directory as the initial directory for the "open file" dialog.
            </summary>
      <param name="fileName">The name of the file to open.</param>
      <returns>The opened document or <b>null</b> if operation was cancelled
            or there was an error while loading the document.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewFileActions.FileOpen">
      <summary>
            Shows the "open file" dialog allowing the user to select a document to open,
            and then opens it.
            </summary>
      <returns>The opened document or <b>null</b> if operation was cancelled
            or there was an error while loading the document.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewFileActions.FileSave(System.String,C1.C1Preview.Export.ExportProvider,System.Boolean)">
      <summary>
            Saves (exports) the current document in the specified file.
            If <paramref name="fileName" /> is empty or specifies a directory,
            the user can select a file name in a "save file" dialog.
            If specified, <paramref name="exportProvider" /> determines
            the save/export format, otherwise the file extension is used.
            </summary>
      <param name="fileName">The target file name.</param>
      <param name="exportProvider">The export provider to use.</param>
      <param name="showErrorMessage">If <b>true</b>, error message is shown if an exception occurs,
            otherwise the exception is rethrown.</param>
      <returns>
        <b>true</b> if the current document was saved, <b>false</b> if operation was cancelled,
            or if <paramref name="showErrorMessage" /> is <b>true</b> and an error occurred while saving the document.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewFileActions.FileSave(System.String,C1.C1Preview.Export.ExportProvider)">
      <summary>
            Saves (exports) the current document in the specified file.
            If <paramref name="fileName" /> is empty or specifies a directory,
            the user can select a file name in a "save file" dialog.
            If specified, <paramref name="exportProvider" /> determines
            the save/export format, otherwise the file extension is used.
            </summary>
      <param name="fileName">The target file name.</param>
      <param name="exportProvider">The export provider to use.</param>
      <returns>
        <b>true</b> if the current document was saved, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewFileActions.FileSave">
      <summary>
            Saves (exports) the current document in the specified file.
            The user can select a file name in a "save file" dialog.
            The save/export format is determined by the file extension.
            </summary>
      <returns>
        <b>true</b> if the current document was saved, <b>false</b> otherwise.</returns>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewFileActions.LongOperation">
      <summary>
            Occurs periodically during long operations (e.g. saving to disk).
            Allows to provide progress indication and the ability to cancel generation to the user.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewFileActions.Document">
      <summary>
            Gets or sets the current document.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewFileActions.ExportOptions">
      <summary>
            Gets or sets export options.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewFileActions.CanSaveFile">
      <summary>
            Gets a value indicating whether the current document can be saved.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PreviewOutlineView">
      <summary>
            Displays a tree representing the outline nodes of the connected preview pane.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewOutlineView.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.C1PreviewOutlineView" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewOutlineView.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the C1PreviewOutlineView.
            </summary>
      <param name="disposing">
      </param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewOutlineView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)">
      <summary>
            Overloaded. Raises the AfterSelect event.
            </summary>
      <param name="e">A TreeViewEventArgs that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewOutlineView.OnPropertyChanged(System.String)">
      <summary>
            Raises the PropertyChanged event.
            </summary>
      <param name="propertyName">The name of the changed property.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewOutlineView.ShouldSerializePreviewPane">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PreviewOutlineView.PreviewPane" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PreviewOutlineView.PreviewPane" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewOutlineView.ResetPreviewPane">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PreviewOutlineView.PreviewPane" /> property to its default value.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewOutlineView.PropertyChanged">
      <summary>
            Occurs when a property of the outline view that is not inherited from the base class changes.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewOutlineView.Nodes">
      <summary>
            Gets the collection of tree nodes representing the outline entries of the document.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewOutlineView.PreviewPane">
      <summary>
            Gets or sets the preview pane to which this outline view is connected.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewOutlineView.ExpandTree">
      <summary>
            Gets or sets a value indicating whether to expand the tree when the outline is displayed for the first time.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewOutlineView.FollowPreviewPage">
      <summary>
            Gets or sets a value indicating whether selection follows the current preview page (StartPageIdx).
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.ContextMenuTags">
      <summary>
            Defines static readonly objects that are assigned
            to the <b>Tag</b> property of built-in context menu
            items and can be used in user code to identify those items.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ContextMenuTags.SelectTool">
      <summary>
            Identifies text select tool menu item.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ContextMenuTags.HandTool">
      <summary>
            Identifies hand tool menu item.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ContextMenuTags.ZoomTool">
      <summary>
            Identifies zoom tool menu item.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ContextMenuTags.Copy">
      <summary>
            Identifies copy menu item.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ContextMenuTags.SelectAll">
      <summary>
            Identifies select all menu item.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ContextMenuTags.DeselectAll">
      <summary>
            Identifies deselect all menu item.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ContextMenuTags.Find">
      <summary>
            Identifies find menu item.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ContextMenuTags.Print">
      <summary>
            Identifies print menu item.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ContextMenuTags.ZoomIn">
      <summary>
            Identifies zoom in menu item.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ContextMenuTags.ZoomOut">
      <summary>
            Identifies zoom out menu item.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PreviewPane">
      <summary>
            Represents the barebones control showing the preview of the associated document. To add functionality, other C1Preview components can be connected to this control.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.AddViewStateToHistory(C1.Win.C1Preview.HistorySavedActionsEnum,System.String,C1.Win.C1Preview.ViewState)">
      <summary>
            Creates a new <see cref="T:C1.Win.C1Preview.ViewHistoryItem" /> object with the specified <see cref="T:C1.Win.C1Preview.ViewState" />.
            <para>
            The newly created object is then added to the <see cref="P:C1.Win.C1Preview.C1PreviewPane.ViewHistory" /> collection.
            </para><para>
            Adding of the new state to history can be cancelled in the
            <see cref="E:C1.Win.C1Preview.C1PreviewPane.HistoryItemAdding" /> event.
            </para></summary>
      <param name="userAction">The <see cref="T:C1.Win.C1Preview.HistorySavedActionsEnum" /> value defining
            user action associated with the new history item.</param>
      <param name="historyItemCaption">The caption of the new history item.</param>
      <param name="viewState">The <see cref="T:C1.Win.C1Preview.ViewState" /> structure representig the state
            of <see cref="T:C1.Win.C1Preview.C1PreviewPane" /> control (scroll position, zooming etc).</param>
      <returns>The newly created <see cref="T:C1.Win.C1Preview.ViewHistoryItem" /> object,
            or <b>null</b> if the action was cancelled.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.AddCurrentViewStateToHistory(C1.Win.C1Preview.HistorySavedActionsEnum,System.String,System.Boolean)">
      <summary>
            Creates a new <see cref="T:C1.Win.C1Preview.ViewHistoryItem" /> object using the current state
            of the <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            <para>
            The newly created object is then added to the <see cref="P:C1.Win.C1Preview.C1PreviewPane.ViewHistory" /> collection.
            Adding of the new state to history is cancelled if the <see cref="P:C1.Win.C1Preview.C1PreviewPane.Document" /> property of
            the current preview pane is <b>null</b>, or if the specified action should not be saved
            according to the <see cref="P:C1.Win.C1Preview.HistoryOptions.SavedActions" /> value
            of the current pane's <see cref="P:C1.Win.C1Preview.C1PreviewPane.HistoryOptions" />.
            </para><para>
            Adding of the new state to history can also be cancelled in the
            <see cref="E:C1.Win.C1Preview.C1PreviewPane.HistoryItemAdding" /> event.
            </para></summary>
      <param name="userAction">A <see cref="T:C1.Win.C1Preview.HistorySavedActionsEnum" /> value defining the user action associated with the new history item.</param>
      <param name="historyItemCaption">The caption of the new history item.</param>
      <param name="force">If <b>true</b>, forces adding of the current state even if it is equal to the state
            stored in the <see cref="P:C1.Win.C1Preview.C1PreviewPane.CurrentHistoryEntry" />.</param>
      <returns>The newly created <see cref="T:C1.Win.C1Preview.ViewHistoryItem" /> object,
            or <b>null</b> if the action was cancelled.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.LockHistory">
      <summary>
            Temporarily locks (suspends) adding of new items to <see cref="P:C1.Win.C1Preview.C1PreviewPane.ViewHistory" />.
            Note a matching call to <see cref="M:C1.Win.C1Preview.C1PreviewPane.UnlockHistory(C1.Win.C1Preview.HistorySavedActionsEnum,System.String)" /> must exist for each call of this method.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.UnlockHistory(C1.Win.C1Preview.HistorySavedActionsEnum,System.String)">
      <summary>
            Unlocks (resumes) adding of new items to <see cref="P:C1.Win.C1Preview.C1PreviewPane.ViewHistory" />
            temporarily locked by a previous call to <see cref="M:C1.Win.C1Preview.C1PreviewPane.LockHistory" />.
            </summary>
      <param name="userAction">Action that was performed between the call to <see cref="M:C1.Win.C1Preview.C1PreviewPane.LockHistory" />
            and this call to <see cref="M:C1.Win.C1Preview.C1PreviewPane.UnlockHistory(C1.Win.C1Preview.HistorySavedActionsEnum,System.String)" />. This action is added to history.</param>
      <param name="historyItemCaption">Caption for the <paramref name="userAction" /> history item.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.HistoryForward">
      <summary>
            Goes forward in history.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.HistoryBack">
      <summary>
            Goes back in history.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.FindHyperlink(System.Drawing.Point)">
      <summary>
            Searches for a hyperlink at the specified client location.
            </summary>
      <param name="ptClient">Location, in client coordinates.</param>
      <returns>A <see cref="T:C1.C1Preview.C1HyperlinkInfo" /> describing the hyperlink, or <b>null</b> if none was found.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.GotoDocumentLocation(C1.C1Preview.IDocumentLocation)">
      <summary>
            Ensures that the specified document location is visible in the current preview pane.
            </summary>
      <param name="documentLocation">A document location to go to.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.GotoDocumentLocation(C1.C1Preview.IDocumentLocation,System.String)">
      <summary>
            Ensures that the specified document location is visible in the current preview pane.
            </summary>
      <param name="documentLocation">A document location to go to.</param>
      <param name="historyItemCaption">The caption to use for the history item created by the view change.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.GotoAnchor(System.String)">
      <summary>
            Ensures that the specified anchor (see <see cref="T:C1.C1Preview.C1Anchor" />)
            is visible in the current preview pane.
            </summary>
      <param name="anchorName">The name of the anchor.</param>
      <returns>
        <b>true</b> if the anchor was found, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.DoEscape">
      <summary>
            Handles the Escape key (clears selection, resets mouse mode).
            </summary>
      <returns>True.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.DoScrollTop">
      <summary>
            Scrolls to the top of the document.
            </summary>
      <returns>True.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.DoScrollBottom">
      <summary>
            Scrolls to the end of the document.
            </summary>
      <returns>True.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.DoScrollPageUp">
      <summary>
            Scrolls one page up.
            </summary>
      <returns>True.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.DoScrollPageDown">
      <summary>
            Scrolls one page down.
            </summary>
      <returns>True.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.DoScrollUp">
      <summary>
            Scrolls up.
            </summary>
      <returns>True.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.DoScrollDown">
      <summary>
            Scrolls down.
            </summary>
      <returns>True.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.DoScrollLeft">
      <summary>
            Scrolls left.
            </summary>
      <returns>True.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.DoScrollRight">
      <summary>
            Scrolls right.
            </summary>
      <returns>True.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.DoGoPreviousPage">
      <summary>
            Goes to previous page.
            </summary>
      <returns>True.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.DoGoNextPage">
      <summary>
            Goes to next page.
            </summary>
      <returns>True.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.DoSelectAll">
      <summary>
            Selects the whole document.
            </summary>
      <returns>True.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.DoCopySelection">
      <summary>
            Copies the current selection to clipboard.
            </summary>
      <returns>True.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.DoZoomIn">
      <summary>
            Zooms in.
            </summary>
      <returns>True.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.DoZoomOut">
      <summary>
            Zooms out.
            </summary>
      <returns>True.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.DoGoHistoryBack">
      <summary>
            Goes back in history.
            </summary>
      <returns>True.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.DoGoHistoryForward">
      <summary>
            Goes forward in history.
            </summary>
      <returns>True.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.SetFocus(C1.C1Preview.RenderInputFragment)">
      <summary>
            Sets the input focus to the specified <see cref="T:C1.C1Preview.RenderInputFragment" /> object.
            This method should be used only if the preview currently shows a <see cref="T:C1.C1Preview.C1PrintDocument" />.
            </summary>
      <param name="inputFragment">The input fragment to move the focus to.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.SelectAll">
      <summary>
            Selects all text in the document currently loaded into this <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.SelectPage(System.Int32)">
      <summary>
            Selects all text on the specified page
            in the document currently loaded into this <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
      <param name="pageIdx">0-based page index.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.SelectionClear">
      <summary>
            Removes all selection
            in the document currently loaded into this <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.SelectWord(System.Drawing.Point)">
      <summary>
            Selects a word at the specified location (in client coordinates)
            in the document currently loaded into this <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
      <param name="ptClient">The location in client coordinates.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.CopySelectionToClipboard">
      <summary>
            Copies the text currently selected in this <see cref="T:C1.Win.C1Preview.C1PreviewPane" />
            to clipboard. Does nothing if the current selection is empty.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.GetSelectedText">
      <summary>
            Gets the text currently selected in this <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
      <returns>The currently selected text, or empty string if the current
            selection is empty.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.OnInitializeSSRSParametersDialog(System.Windows.Forms.Form,System.Boolean,C1.Win.C1Document.C1DocumentSource)">
      <summary>
            TBD:
            Fires <see cref="E:C1.Win.C1Preview.C1PreviewPane.InitializeSSRSParametersDialog" /> event, should return <b>false</b>
            if dialog should NOT be shown.
            </summary>
      <param name="dialog">Dialog that is about to be displayed.</param>
      <param name="userAction">Indicates whether the user causes dialog to show, i.e. user pressed a toolbar button or key combination.</param>
      <param name="documentSource">
        <see cref="T:C1.Win.C1Document.C1DocumentSource" /> object parameters of that are edited.</param>
      <returns>Returns <b>true</b> if dialog should be shown, otherwise <b>false</b> this indicates that parameters values were defined in the event.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.OnPreviewPrint(C1.Win.C1Preview.PreviewPrintEventArgs)">
      <summary>
            Raises the <see cref="E:C1.Win.C1Preview.C1PreviewPane.PreviewPrint" /> event on the current preview pane.
            </summary>
      <param name="e">A <see cref="T:C1.Win.C1Preview.PreviewPrintEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.OnPropertyChanged(System.String)">
      <summary>
            Raises the PropertyChanged event.
            </summary>
      <param name="propertyName">The name of the changed property.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.OnLongOperation(C1.C1Preview.LongOperationEventArgs)">
      <summary>
            Raises the LongOperation event on the preview pane.
            </summary>
      <param name="e">A <see cref="T:C1.Win.LongOperationEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.OnLongOperation(System.Double,System.Boolean)">
      <summary>
            Raises the LongOperation event on the preview pane.
            </summary>
      <param name="complete">How much is complete (from 0 to 1).</param>
      <param name="canCancel">Whether the operation can be cancelled.</param>
      <returns>True if the operation should be cancelled.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.#ctor">
      <summary>
            Initializes a new instance of <see cref="T:C1.Win.C1Preview.C1PreviewPane" /> control.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.Dispose(System.Boolean)">
      <summary>
            Releases the resoureces used by <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
      <param name="disposing">
        <b>true</b> to release both managed and unmanaged resources; <b>false</b> to release only unmanaged resources.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ShouldSerializeBackColor">
      <summary>
            Tests whether the BackColor property should be serialized.
            </summary>
      <returns>True if BackColor should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ResetBackColor">
      <summary>
            Resets the BackColor property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.WndProc(System.Windows.Forms.Message@)">
      <summary>
            Overridden. Processes Windows messages.
            </summary>
      <param name="m">The Windows System.Windows.Forms.Message to process.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.OnParentChanged(System.EventArgs)">
      <summary>
            Overridden. Raises the ParentChanged event.
            </summary>
      <param name="e">An EventArgs that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.OnSizeChanged(System.EventArgs)">
      <summary>
            Overridden. Raises the SizeChanged event.
            </summary>
      <param name="e">An EventArgs that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Overridden. Raises the Layout event.
            </summary>
      <param name="levent">An LayoutEventArgs that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.UpdatePreview">
      <summary>
            Forces the preview pane to update the preview.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Raises the MouseDown event.
            </summary>
      <param name="e">A MouseEventArgs that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Raises the MouseClick event.
            </summary>
      <param name="e">A MouseEventArgs that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Raises the MouseDoubleClick event.
            </summary>
      <param name="e">A MouseEventArgs that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Raises the MouseUp event.
            </summary>
      <param name="e">A MouseEventArgs that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Raises the MouseMove event.
            </summary>
      <param name="e">A MouseEventArgs that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Raises the MouseWheel event.
            </summary>
      <param name="e">A MouseEventArgs that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Raises the Paint event.
            </summary>
      <param name="e">A PaintEventArgs that contains the event data.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ShowErrorMessage(System.Exception)">
      <summary>
            Shows a dialog box with the exception message.
            </summary>
      <param name="ex">The exception to show.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.EditSsrsParameters">
      <summary>
            Shows a dialog with SSRS parameters, if any exist.
            </summary>
      <returns>
        <b>True</b> if the user entered correct values for SSRS parameters, if necessary.
            <b>False</b> if the user cancels the dialog.
            </returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ClientToDocument(System.Drawing.Point,System.Int32@,System.Drawing.PointF@)">
      <summary>
            Converts a point in the current <see cref="T:C1.Win.C1Preview.C1PreviewPane" />'s client coordinates,
            to document coordinates.
            <para>
            Document coordinates are also pixels, but are relative to a specific page's left top corner,
            and do not depend on the current zoom factor.
            </para><para>
            For instance, a client point that is over a page's right top corner would yield
            a point with document coordinates (816,0) on a 96 DPI resolution display
            for a 8.5 in wide page (816 is 8.5 multiplied by 96), regardless of the current
            zoom factor or document scroll position in the preview.
            </para></summary>
      <param name="pt">Point in client coordinates.</param>
      <param name="pageIdx">OUT: 0-based page index or -1.</param>
      <param name="ptPage">OUT: document coordinates on page <paramref name="pageIdx" />.</param>
      <returns>
        <b>True</b> if a page containing the specified point has been found, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.DocumentToClient(System.Int32,System.Drawing.PointF,System.Drawing.Point@)">
      <summary>
            Converts a <b>PointF</b> in document coordinates to the current
            <see cref="T:C1.Win.C1Preview.C1PreviewPane" />'s client coordinates.
            </summary>
      <param name="pageIdx">0-based page index of the document point.</param>
      <param name="ptPage">Point on page <paramref name="pageIdx" />.</param>
      <param name="pt">OUT: Preview pane client point.</param>
      <returns>
        <b>True</b> if the client point belongs to a document page, <b>false</b> otherwise.</returns>
      <seealso cref="M:C1.Win.C1Preview.C1PreviewPane.ClientToDocument(System.Drawing.Point,System.Int32@,System.Drawing.PointF@)" />
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.DocumentToClient(System.Int32,System.Drawing.RectangleF,System.Drawing.Rectangle@)">
      <summary>
            Converts a <b>RectangleF</b> in document coordinates to the current
            <see cref="T:C1.Win.C1Preview.C1PreviewPane" />'s client coordinates.
            </summary>
      <param name="pageIdx">0-based page index.</param>
      <param name="rPage">Rectangle on page <paramref name="pageIdx" />.</param>
      <param name="r">OUT: Rectangle converted to preview pane client coordinates.</param>
      <returns>
        <b>True</b> if the client rectangle's location belongs to a document page, <b>false</b> otherwise.</returns>
      <seealso cref="M:C1.Win.C1Preview.C1PreviewPane.ClientToDocument(System.Drawing.Point,System.Int32@,System.Drawing.PointF@)" />
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.DocumentToClient(System.Int32,System.Drawing.RectangleF)">
      <summary>
            Converts a <b>RectangleF</b> in document coordinates to the current
            <see cref="T:C1.Win.C1Preview.C1PreviewPane" />'s client coordinates.
            </summary>
      <param name="pageIdx">0-based page index.</param>
      <param name="rPage">Rectangle on page <paramref name="pageIdx" />.</param>
      <returns>Rectangle converted to preview pane client coordinates.</returns>
      <seealso cref="M:C1.Win.C1Preview.C1PreviewPane.ClientToDocument(System.Drawing.Point,System.Int32@,System.Drawing.PointF@)" />
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.DocumentToClient(System.Int32,System.Drawing.PointF)">
      <summary>
            Converts a <b>PointF</b> in document coordinates to the current
            <see cref="T:C1.Win.C1Preview.C1PreviewPane" />'s client coordinates.
            </summary>
      <param name="pageIdx">0-based page index.</param>
      <param name="pPage">Point on page <paramref name="pageIdx" />.</param>
      <returns>Point converted to preview pane client coordinates.</returns>
      <seealso cref="M:C1.Win.C1Preview.C1PreviewPane.ClientToDocument(System.Drawing.Point,System.Int32@,System.Drawing.PointF@)" />
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.GetPageVisibleArea(System.Int32)">
      <summary>
            Gets <b>RectangleF</b> representing the area of the specified page
            that is currently visible in the current <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            The rectangle is in document (i.e. independent of the current zoom factor)
            coordinates, and is relative to the specified page's left top corner.
            </summary>
      <param name="pageIdx">0-based page index.</param>
      <returns>Rectangle representing the currently visible area of the specified page.</returns>
      <seealso cref="M:C1.Win.C1Preview.C1PreviewPane.ClientToDocument(System.Drawing.Point,System.Int32@,System.Drawing.PointF@)" />
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.GetPagePreviewRect(System.Int32)">
      <summary>
            Gets the rectangle representing the specified page,
            relative to <see cref="P:C1.Win.C1Preview.C1PreviewPane.PreviewScrollPosition" />.
            The rectangle is in document coordinates
            (i.e. does not depend on the current zoom factor).
            </summary>
      <param name="pageIdx">0-based page index.</param>
      <returns>
        <b>RectangleF</b> structure representing the specified page.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.GetPageSize(System.Int32)">
      <summary>
            Gets the size of a page specified by the page index.
            The size is in document coordinates
            (i.e. does not depend on the current zoom factor).
            </summary>
      <param name="pageIdx">0-based page index.</param>
      <returns>
        <b>SizeF</b> structure representing the specified page size.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.GetPageVisibility(System.Int32)">
      <summary>
            Gets the percentage (from 0 to 100) of the area of the specified page
            that is currently visible in this <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            The returned value is rounded to 2 decimal digits.
            </summary>
      <param name="pageIdx">0-based page index.</param>
      <returns>Percentage of the specified page's surface that is visible.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.IsPageVisible(System.Int32)">
      <summary>
            Gets a value indicating whether any part of the specified page
            is currently visible in this <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
      <param name="pageIdx">0-based page index.</param>
      <returns>
        <b>True</b> if any part of the specified page is visible, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ScrollClient(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Scrolls the previewed document in the client area by the specified
            horizontal and vertical amounts.
            </summary>
      <param name="dx">The horizontal scroll amount.</param>
      <param name="dy">The vertical scroll amount.</param>
      <param name="allowRowChange">If <b>true</b>, the currently shown row
            of pages may be changed by the scroll operation. Otherwise, it can not.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ScrollClient(System.Int32,System.Int32)">
      <summary>
            Scrolls the previewed document in the client area by the specified
            horizontal and vertical amounts.
            May change the currently shown row of pages.
            </summary>
      <param name="dx">The horizontal scroll amount.</param>
      <param name="dy">The vertical scroll amount.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ScrollPreview(System.Single,System.Single,System.Boolean)">
      <summary>
            Scrolls the previewed document in the client area by the specified
            horizontal and vertical amounts. The scroll amounts are
            expressed in document coordinates.
            </summary>
      <param name="dx">The horizontal scroll amount.</param>
      <param name="dy">The vertical scroll amount.</param>
      <param name="allowRowChange">If <b>true</b>, the currently shown row
            of pages may be changed by the scroll operation. Otherwise, it can not.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ScrollPreview(System.Single,System.Single)">
      <summary>
            Scrolls the previewed document in the client area by the specified
            horizontal and vertical amounts. The scroll amounts are
            expressed in document coordinates.
            May change the currently shown row of pages.
            </summary>
      <param name="dx">The horizontal scroll amount.</param>
      <param name="dy">The vertical scroll amount.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.MakeClientVisible(System.Drawing.Rectangle)">
      <summary>
            Ensures that the specified rectangle (expressed in preview pane
            client coordinates) is visible (scrolled in) in the preview pane.
            </summary>
      <param name="rClient">The rectangle to make visible.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.MakeClientVisible(System.Drawing.Point)">
      <summary>
            Ensures that the specified point (expressed in preview pane
            client coordinates) is visible (scrolled in) in the preview pane.
            </summary>
      <param name="clientPt">The point to make visible.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.TextSearch(C1.Win.C1Preview.C1TextSearchArgs)">
      <summary>
            Searches for an occurrence of a text in the document currently
            loaded in the current <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
      <param name="tsa">Text search arguments.</param>
      <returns>
        <b>True</b> if the search text was found,
            <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.TextSearchAll(C1.Win.C1Preview.C1TextSearchArgs)">
      <summary>
            Searches for all occurrences of a text in the document currently
            loaded in the current <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
      <param name="tsa">Text search arguments.</param>
      <returns>
        <b>True</b> if at least one occurrence of the search text was found,
            <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.SelectTextFragment(C1.Win.C1Preview.C1TextFragment)">
      <summary>
            Selects the specified text fragment in the document currently
            loaded in the current <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
      <param name="frag">An instance of a class describing the fragment to select.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.GoToSelection">
      <summary>
            Makes sure that the currently selected text is visible
            in the current <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            (This method does nothing if currently there is no selection.)
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.FileOpen">
      <summary>
            Shows a file open dialog, allows the user to select a C1DX or C1D file,
            and loads the selected file into the current preview pane.
            If an exception occurs while loading the file, an error message is displayed,
            and the method returns <b>false</b>.
            </summary>
      <returns>
        <b>true</b> if the file was successfully loaded,
            <b>false</b> if an error occurred or the user cancelled the dialog.</returns>
      <remarks>If a handler is assigned to the <see cref="E:C1.Win.C1Preview.C1PreviewPane.Error" /> event,
            that handler is invoked but no message is shown to the user.</remarks>
      <seealso cref="M:C1.Win.C1Preview.C1PreviewPane.FileOpen(System.String)" />
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.FileOpen(System.String)">
      <summary>
            Loads the specified file (which must be a valid C1DX, C1D or C1MDX document)
            into the current preview pane.
            <para>
            If <paramref name="fileName" /> does not exist or is a directory,
            shows the file open dialog and allows the user to select a file to load.
            In that case <paramref name="fileName" /> specifies the initial directory
            for the dialog.
            </para></summary>
      <param name="fileName">The name of the file to load, or the initial directory
            for the file open dialog.</param>
      <returns>
        <b>true</b> if the file was successfully loaded,
            <b>false</b> if an error occurred or the user cancelled the dialog.</returns>
      <remarks>If a handler is assigned to the <see cref="E:C1.Win.C1Preview.C1PreviewPane.Error" /> event,
            that handler is invoked but no message is shown to the user.</remarks>
      <seealso cref="M:C1.Win.C1Preview.C1PreviewPane.FileOpen" />
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.FileSave">
      <summary>
            Saves the currently loaded document,
            allowing the user to select the file name and the output format,
            using the <see cref="P:C1.Win.C1Preview.C1PreviewPane.ExportOptions" /> specified
            on the current preview pane.
            </summary>
      <returns>
        <b>true</b> if the file was saved, <b>false</b> if an error occurred
            or if the user cancelled the dialog.</returns>
      <remarks>If a handler is assigned to the <see cref="E:C1.Win.C1Preview.C1PreviewPane.Error" /> event,
            that handler is invoked but no message is shown to the user.</remarks>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.FileSave(System.String,C1.C1Preview.Export.ExportProvider)">
      <summary>
            Saves the currently loaded document into the specified <paramref name="fileName" />.
            If <paramref name="fileName" /> is <b>null</b> or empty, or if
            <paramref name="exportProvider" /> is <b>null</b>,
            shows the file save dialog allowing the user to select
            the file name and output format.
            <para><see cref="P:C1.Win.C1Preview.C1PreviewPane.ExportOptions" /> specified
            on the current preview pane are used when saving the document.
            </para></summary>
      <param name="fileName">The output file name.</param>
      <param name="exportProvider">The <see cref="T:C1.C1Preview.Export.ExportProvider" /> to use.</param>
      <returns>
        <b>true</b> if the file was saved, <b>false</b> if an error occurred
            or if the user cancelled the dialog.</returns>
      <remarks>If a handler is assigned to the <see cref="E:C1.Win.C1Preview.C1PreviewPane.Error" /> event,
            that handler is invoked but no message is shown to the user.</remarks>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.Reflow">
      <summary>
            Reflows the currently loaded document.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.PageSetup">
      <summary>
            Invokes the standard page setup dialog.
            If the user presses OK in the dialog, the currently loaded document
            reflows if reflow is supported.
            </summary>
      <returns>
        <b>True</b> if the user pressed OK in the dialog,
            <b>false</b> if the user cancelled the dialog.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.Print">
      <summary>
            Shows the standard print dialog, allowing the user
            to print the currently loaded document.
            </summary>
      <returns>
        <b>True</b> if the user pressed OK in the dialog,
            <b>false</b> if the user cancelled the dialog.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.Print(System.String,System.Int32[])">
      <summary>
            Shows the standard print dialog, allowing the user
            to print the currently loaded document.
            </summary>
      <param name="printerName">The name of the printer that should be initially selected in the dialog.</param>
      <param name="selectedPageNumbers">The list of selected page numbers.
            If this parameter is not <b>null</b>, <b>selection</b> option is enabled in the dialog.</param>
      <returns>
        <b>True</b> if the user pressed OK in the dialog,
            <b>false</b> if the user cancelled the dialog.</returns>
      <remarks>
            If an exception occurs, the error message is shown,
            and <b>false</b> is returned.
            </remarks>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ShouldSerializeZoomFactor">
      <summary>
            Tests whether the ZoomFactor property should be serialized.
            </summary>
      <returns>True if ZoomFactor should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ResetZoomFactor">
      <summary>
            Resets the ZoomFactor property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ShouldSerializePagesFillColor">
      <summary>
            Tests whether the PagesFillColor property should be serialized.
            </summary>
      <returns>True if PagesFillColor should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ResetPagesFillColor">
      <summary>
            Resets the PagesFillColor to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ShouldSerializePagesPadding">
      <summary>
            Tests whether the PagesPadding property should be serialized.
            </summary>
      <returns>True if PagesPadding should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ResetPagesPadding">
      <summary>
            Resets the PagesPadding to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ShouldSerializePagesPaddingSmall">
      <summary>
            Tests whether the PagesPaddingSmall property should be serialized.
            </summary>
      <returns>True if PagesPaddingSmall should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ResetPagesPaddingSmall">
      <summary>
            Resets the PagesPaddingSmall to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ShouldSerializeSidesPadding">
      <summary>
            Tests whether the SidesPadding property should be serialized.
            </summary>
      <returns>True if SidesPadding should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ResetSidesPadding">
      <summary>
            Resets the SidesPadding to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ShouldSerializeZoomSteps">
      <summary>
            Tests whether the ZoomSteps property should be serialized.
            </summary>
      <returns>True if ZoomSteps should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ResetZoomSteps">
      <summary>
            Resets the ZoomSteps property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ShouldSerializeExportOptions">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PreviewPane.ExportOptions" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PreviewPane.ExportOptions" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ShouldSerializeCompatibilityOptions">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PreviewPane.CompatibilityOptions" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PreviewPane.CompatibilityOptions" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.ResetCompatibilityOptions">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PreviewPane.CompatibilityOptions" /> property to the defalut value.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.ContextMenuStrip">
      <summary>
            Gets or sets the <c>System.Windows.Forms.ContextMenuStrip</c> associated with this <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            If not explicitly set in code (i.e. null at design time), the default context menu will be used at runtime.
            </summary>
      <remarks>
            To remove the default context menu altogether without assigning a custom menu,
            set this value to <c>null</c> in code.
            </remarks>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.IsHistoryLocked">
      <summary>
            Gets a value indicating whether history is currently locked
            (i.e. adding of new history items is suspended).
            </summary>
      <seealso cref="M:C1.Win.C1Preview.C1PreviewPane.LockHistory" />
      <seealso cref="M:C1.Win.C1Preview.C1PreviewPane.UnlockHistory(C1.Win.C1Preview.HistorySavedActionsEnum,System.String)" />
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.HistoryOptions">
      <summary>
            Gets the <see cref="P:C1.Win.C1Preview.C1PreviewPane.HistoryOptions" /> object determining how
            history is saved for the current <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.VisitedDocuments">
      <summary>
            Gets the collection of <see cref="T:C1.Win.C1Preview.VisitedDocument" /> objects saved in history.
            If <see cref="P:C1.Win.C1Preview.C1PreviewPane.HistoryOptions" /> indicates that documents should be saved in history,
            they are added to this collection automatically when the user navigates between documents.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.ViewHistory">
      <summary>
            Gets the collection of <see cref="T:C1.Win.C1Preview.ViewHistoryItem" /> objects saved in history.
            Depending on <see cref="P:C1.Win.C1Preview.C1PreviewPane.HistoryOptions" />, items are automatically added
            to this collection when the user scrolls, zooms and so on in the current
            <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.CurrentVisitedDocumentIndex">
      <summary>
            Gets or sets the index of the current visited document
            in the <see cref="P:C1.Win.C1Preview.C1PreviewPane.VisitedDocuments" /> collection.
            <para>
            Assigning a value to this property causes the preview pane
            to show the document stored at that index in the collection.
            If the assigned value is <b>-1</b>, the current document is cleared.
            </para></summary>
      <seealso cref="P:C1.Win.C1Preview.C1PreviewPane.CurrentVisitedDocument" />
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.CurrentVisitedDocument">
      <summary>
            Gets or sets the current visited document.
            </summary>
      <seealso cref="P:C1.Win.C1Preview.C1PreviewPane.CurrentVisitedDocumentIndex" />
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.CurrentHistoryEntry">
      <summary>
            Gets or sets the current history entry.
            <para>
            Assigning to this property moves the preview pane in history.
            The value being assigned must be an element in the <see cref="P:C1.Win.C1Preview.C1PreviewPane.ViewHistory" /> collection.
            </para><para>
            Note that in some situations the current history entry can not be changed
            (e.g. when the operation is attempted while the preview is changing its state).
            In those cases the set operation will be ignored.
            </para></summary>
      <seealso cref="P:C1.Win.C1Preview.C1PreviewPane.CurrentHistoryEntryIndex" />
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.CurrentHistoryEntryIndex">
      <summary>
            Gets or sets the index of current history entry.
            <para>
            Assigning to this property moves the preview pane in history.
            </para><para>
            Note that in some situations the current history entry can not be changed
            (e.g. when the operation is attempted while the preview is changing its state).
            In those cases the set operation will be ignored.
            </para></summary>
      <seealso cref="P:C1.Win.C1Preview.C1PreviewPane.CurrentHistoryEntry" />
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewPane.VisitedDocumentAdding">
      <summary>
            Occurs when a new <see cref="T:C1.Win.C1Preview.VisitedDocument" /> object is being added
            to the <see cref="P:C1.Win.C1Preview.C1PreviewPane.VisitedDocuments" /> collection of the current preview pane.
            Adding can be cancelled in the event handler.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewPane.SaveVisitedDocument">
      <summary>
            Occurs if <see cref="P:C1.Win.C1Preview.HistoryOptions.VisitedDocumentStorage" />
            on the current preview pane is set to <see cref="F:C1.Win.C1Preview.VisitedDocumentStorageEnum.User" />,
            and a visited document should be added to history.
            The event handler must save the document.
            </summary>
      <seealso cref="E:C1.Win.C1Preview.C1PreviewPane.LoadVisitedDocument" />
      <seealso cref="P:C1.Win.C1Preview.C1PreviewPane.HistoryOptions" />
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewPane.LoadVisitedDocument">
      <summary>
            Occurs if <see cref="P:C1.Win.C1Preview.HistoryOptions.VisitedDocumentStorage" />
            on the current preview pane is set to <see cref="F:C1.Win.C1Preview.VisitedDocumentStorageEnum.User" />,
            and a previously saved visited document should be loaded from history.
            </summary>
      <seealso cref="E:C1.Win.C1Preview.C1PreviewPane.SaveVisitedDocument" />
      <seealso cref="P:C1.Win.C1Preview.C1PreviewPane.HistoryOptions" />
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewPane.HistoryItemAdding">
      <summary>
            Occurs when a new <see cref="T:C1.Win.C1Preview.ViewHistoryItem" /> object is being added
            to the <see cref="P:C1.Win.C1Preview.C1PreviewPane.ViewHistory" /> collection.
            The event handler can cancel this adding.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewPane.HyperlinkMouseLeave">
      <summary>
            Occurs when the mouse pointer leaves a hyperlink.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewPane.HyperlinkMouseEnter">
      <summary>
            Occurs when the mouse pointer enters a hyperlink.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewPane.HyperlinkJump">
      <summary>
            Occurs when a hyperlink jump takes place.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewPane.HyperlinkMouseDown">
      <summary>
            Occurs when the mouse pointer is over a hyperlink and a mouse button is pressed.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewPane.HyperlinkMouseUp">
      <summary>
            Occurs when the mouse pointer is over a hyperlink and a mouse button is released.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewPane.HyperlinkMouseMove">
      <summary>
            Occurs when the mouse pointer moves over a hyperlink.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewPane.UserHyperlinkJump">
      <summary>
            Occurs when a user-defined hyperlink jump takes place.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.KeyMapStack">
      <summary>
            Gets the KeyMapStack containing key maps for keyboard handling.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewPane.FormsUserAction">
      <summary>
            Occurs when user performs some action on RenderInputBase object within preview (Click, MouseDown etc).
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewPane.PreviewAction">
      <summary>
            Occurs when the document action from preview forms should be executed.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewPane.InitializeSSRSParametersDialog">
      <summary>
            TBD:
            Fired before the control displays the <b>Report Parameters</b> dialog when displaying SSRS report.
            </summary>
      <remarks>
        <para>
          <see cref="T:C1.Win.C1Document.C1DocumentSource" /> object has Parameters collection
            containing parameters used to generate a report.</para>
        <para>This event fires before the dialog is displayed and allows you to customize the dialog by changing 
            its caption, font, colors, etc.</para>
        <para>You can also use this event to inspect and modify parameter values using the 
            <see cref="P:C1.Win.C1Preview.InitializeSSRSParametersDialogEventArgs.Parameters" /> collection.</para>
        <para>Finally, you can use the <see cref="P:C1.Win.C1Preview.InitializeSSRSParametersDialogEventArgs.ShowDialog" /> property to prevent the component
            from showing the parameters dialog.</para>
      </remarks>
      <example>
            The code below uses the <b>InitializeSSRSParametersDialog</b> event to modify the values
            of the report parameters and suppress the display of the parameter dialog.
            <code>
            private void c1PreviewPane1_InitializeSSRSParametersDialog(object sender, 
                     InitializeSSRSParametersDialogEventArgs e)
            {
              // change parameter values
              e.Parameters["StartDate"].Value = DateTime.Now;
              
              // don't show dialog
              e.ShowDialog = false;
            }
            </code></example>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewPane.QueryPageSettings">
      <summary>
            Fired from within the <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> event handler of the <see cref="T:C1.C1Preview.C1PrintManager" />
            used to change page settings. See <see cref="E:C1.C1Preview.C1PrintManager.QueryPageSettings" /> for details.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewPane.AdjustPrintPage">
      <summary>
            Fired from within the <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> event handler of the <see cref="T:C1.C1Preview.C1PrintManager" />
            used to print the document. See <see cref="E:C1.C1Preview.C1PrintManager.AdjustPrintPage" /> for details.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewPane.UserAction">
      <summary>
            Occurs whenever the user clicks one of the predefined preview toolbar buttons
            such as print or file open. Allows to provide non-standard toolbar button handling,
            or cancel the action.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewPane.PreviewPrint">
      <summary>
            Occurs immediately before a print dialog is shown by the preview in response to user action.
            Allows to adjust the properties of the print dialog, or cancel it without showing.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewPane.PropertyChanged">
      <summary>
            Occurs when a property of the preview pane that is not inherited from the base class changes.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewPane.LongOperation">
      <summary>
            Occurs periodically when a long operation is in progress.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewPane.Error">
      <summary>
            Occurs when an external exception is thrown (e.g. while printing).
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.ToolsIntegrator">
      <summary>
            Gets the <see cref="T:C1.Win.C1Preview.C1PreviewToolsIntegrator" /> used by the current preview pane.
            Provides access to controls associated with the current preview pane,
            such as <see cref="T:C1.Win.C1Preview.C1PreviewThumbnailView" /> and <see cref="T:C1.Win.C1Preview.C1PreviewOutlineView" />.
            This value is <b>null</b> if <see cref="P:C1.Win.C1Preview.C1PreviewPane.IntegrateExternalTools" /> is <b>false</b>.
            </summary>
      <seealso cref="P:C1.Win.C1Preview.C1PreviewPane.IntegrateExternalTools" />
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.IntegrateExternalTools">
      <summary>
            Gets or sets a value indicating whether the current preview pane
            should integrate and handle external tools such as toolbars and
            navigation panels.
            When <b>true</b>, the <see cref="P:C1.Win.C1Preview.C1PreviewPane.ToolsIntegrator" /> can be used
            to access the tools associated with the current preview pane.
            </summary>
      <seealso cref="P:C1.Win.C1Preview.C1PreviewPane.ToolsIntegrator" />
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.Document">
      <summary>
            Gets or sets the document shown by the preview.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.CanSetPageSettings">
      <summary>
            Gets a value indicating whether the currently loaded document supports changing the page settings.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.ScaleChildren">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.BackColor">
      <summary>
            Gets or sets the background color for the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.DpiX">
      <summary>
            Gets the horizontal resolution of the display.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.DpiY">
      <summary>
            Gets the vertical resolution of the display.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.Busy">
      <summary>
            Gets or sets the flag indicating whether the preview pane is currently busy.
            Some actions (especially those that could cause significant changes in the
            preview pane's state) raise this flag themselves, and cannot be performed when
            this flag was raised by another operation. This flag should be tested before
            attempting to change preview pane's properties or invoke methods on it.
            </summary>
      <value>The value of the Busy flag.</value>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.SsrsPaginated">
      <summary>
            Gets or sets whether an SSRS report should appear in paginated mode (for printing) or in RPL mode (interactive).
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.Continuous">
      <summary>
            Gets or sets a value indicating whether to show document pages continuously.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.RestrictScrollToPage">
      <summary>
            Gets or sets a value indicating whether scrolling with the scrollbar or mouse wheel is restricted to the current page (for non-continuous mode only).
            <para>The default is false.</para></summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.PageLayout">
      <summary>
            Gets or sets the preview layout.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.ZoomMode">
      <summary>
            Gets or sets the preview zoom mode.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.ZoomFactor">
      <summary>
            Gets or sets the zoom factor (1 is actual size).
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.MinZoomFactor">
      <summary>
            Gets or sets the minimum allowed zoom factor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.MaxZoomFactor">
      <summary>
            Gets or sets the maximum allowed zoom factor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.TrackMousePosition">
      <summary>
            Gets or sets a value indicating whether the rulers should display marks
            showing the current cursor position.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.RulerUnits">
      <summary>
            Gets or sets a value specifying what measurement units should be used by the rulers.
            By default the units are determined by the current country/region.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.Rows">
      <summary>
            Gets or sets the number of page rows shown in non-continuous mode.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.Cols">
      <summary>
            Gets or sets the number of page columns shown.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.StartPageIdx">
      <summary>
            Gets or sets the 0-based index of the currently visible page.
            If several pages are visible, this property indicates the page with the
            most surface shown.
            When the property is set, the new start page's top left corner is aligned
            with the preview window's top left corner.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.PreviewScrollPosition">
      <summary>
            Gets or sets the location of the top left corner of the preview area
            (the scroll position) within the preview window. The value is relative
            to the PreviewRectangle, not to the ClientRectangle. The value is
            independent of the ZoomFactor (i.e. setting the same values will scroll
            to the same logical position in the document at any zoom factor).
            </summary>
      <value>The scroll position (unzoomed).</value>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.MouseMode">
      <summary>
            Gets or sets the mouse mode (zoom, selection etc.).
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.HideMargins">
      <summary>
            Gets or sets a value indicating whether the user is allowed to hide/show margins
            by double-clicking the mouse in the gap between pages.
            </summary>
      <seealso cref="P:C1.Win.C1Preview.C1PreviewPane.CompatibilityOptions" />
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.HideMarginsAvail">
      <summary>
            Gets a value indicating whether horizontal or vertical margins can be hidden
            on the current document.
            Margins can hide if all pages have the same size.
            Additionally, horizontal margins can also hide if the preview has one column.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.HideMarginsState">
      <summary>
            Gets or sets a value indicating whether horizontal and/or vertical margins should be hidden.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.ShowRulers">
      <summary>
            Gets or sets a value indicating whether to show horizontal and/or vertical rulers.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.ShowPrintableArea">
      <summary>
            Gets or sets a value indicating whether to highlight the printable area
            of the current printer.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.ShowPageOutline">
      <summary>
            Gets or sets a value indicating whether to show the original page outline
            (as a dashed line) when PrintingLayout is true and the printer paper does
            not match the original page size.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.PrintingLayout">
      <summary>
            Gets or sets a value indicating whether to show the physical printing
            layout (printer page size and the location of the document pages' on the paper).
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.ShowPrintProgressDialog">
      <summary>
            Gets or sets a value indicating whether to show a cancellable print progress dialog
            while printing a document. If this property is false (which is the default),
            only a status progress bar shows print progress (and so printing cannot be cancelled).
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.PrintOptions">
      <summary>
            Gets the print options.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.PrinterSettings">
      <summary>
            Gets or sets printer settings.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.PageSettings">
      <summary>
            Gets or sets page settings associated with the current document.
            <para><b>IMPORTANT NOTE:</b> The <see cref="T:System.Drawing.Printing.PageSettings" />
            object returned by this property is created on the fly, and any changes made
            to its sub-properties may be lost unless you explicitly assign the modified
            object to the current property.
            </para></summary>
      <value>A snapshot of the current page settings.</value>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.Reflowable">
      <summary>
            Gets the value indicating whether the currently loaded document
            supports reflow.
            </summary>
      <value>True if the document can reflow, false otherwise.</value>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.PagesFillColor">
      <summary>
            Gets or sets the color used to fill the document pages in the preview
            before drawing the content.
            </summary>
      <value>The fill color.</value>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.Pages">
      <summary>
            Gets the collection of the preview pages.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.PagesPadding">
      <summary>
            Gets or sets the amount of padding between pages in the preview.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.PagesPaddingSmall">
      <summary>
            Gets or sets the amount of padding between pages in the preview used when margins are hidden.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.SidesPadding">
      <summary>
            Gets or sets the amount of padding between pages and the preview window edges.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.PagesPaddingCurr">
      <summary>
            Gets the current padding between pages in the preview.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.PreviewRectangle">
      <summary>
            Gets the preview rectangle (client are of the preview pane without the rulers and scrollbars).
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.VertPageRulerRectangle">
      <summary>
            Gets the rectangle for the vertical ruler for the current page, in client coordinates.
            The actual visible ruler can be clipped by the VertRulerArea.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.HorzPageRulerRectangle">
      <summary>
            Gets the rectangle for the horizontal ruler for the current page, in client coordinates.
            The actual visible ruler can be clipped by the HorzRulerArea.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.VertRulerArea">
      <summary>
            Gets the vertical ruler area (the actual ruler is always contained within that area).
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.HorzRulerArea">
      <summary>
            Gets the horizontal ruler area (the actual ruler is always contained within that area).
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.PagesFitPaper">
      <summary>
            Gets the value indicating whether the document pages have the same size
            as the currently selected printer paper.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.ToolTip">
      <summary>
            Gets the ToolTip used to display tooltips in the preview.
            Change this to customize the way preview tooltips look (e.g. change colors etc.).
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.ShowToolTips">
      <summary>
            Gets or sets a value indicating whether to show tooltips.
            </summary>
      <value>True to turn tooltips on, false to turn them off.</value>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.HandleKeyboard">
      <summary>
            Gets or sets a value indicating whether the C1PreviewPane should handle the common preview keys.
            </summary>
      <value>True to turn keyboard handling on, false to turn it off.</value>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.ZoomSteps">
      <summary>
            Gets or sets the array of preset zoom factors.
            </summary>
      <value>The array of float values used as preset zoom factors.</value>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.StatusText">
      <summary>
            Gets or sets the string that is interpreted by attached controls as the current status string.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.PreviewCursors">
      <summary>
            Gets the set of cursors used in the preview.
            </summary>
      <value>The cursors.</value>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.ExportOptions">
      <summary>
            Gets the options controlling the behavior of export modules.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.PrintPreviewControl">
      <summary>
            Gets the <see cref="T:C1.Win.C1Preview.C1PrintPreviewControl" /> containing the current <see cref="T:C1.Win.C1Preview.C1PreviewPane" />, or <b>null</b>.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.HasSelection">
      <summary>
            Gets a value indicating whether anything is selected in the current preview pane.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewPane.CompatibilityOptions">
      <summary>
            Gets the <see cref="T:C1.Win.C1Preview.CompatibilityOptions" /> object
            which determines compatibility with previous versions of <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PreviewPane.DocumentTypeConverter">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PreviewPane.LayoutSection">
      <summary>
            Helper class providing a section inside which the preview layout is suspended.
            Should be used to enclose fragments of code where several properties on which
            the preview pages layout depends are changed. Layout updating is suspended
            between the construction and disposing of the class instance. Sample usage:
            using (LayoutSection ls = new LayoutSection(previewPane)) { ..code... }.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.LayoutSection.#ctor(C1.Win.C1Preview.C1PreviewPane,C1.Win.C1Preview.HistorySavedActionsEnum)">
      <summary>
            Initializes a new instance of the LayoutSection class.
            </summary>
      <param name="pane">The preview pane which is the owner of this layout section.</param>
      <param name="historyItemAction">Action that caused this layout section (for history).</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.LayoutSection.Dispose">
      <summary>
            Releases the resources used by the layout section. Updates the preview pane layout.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PreviewPane.BusySection">
      <summary>
            Helper class providing a busy section for a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />,
            raising the <see cref="P:C1.Win.C1Preview.C1PreviewPane.Busy" /> flag in its constructor,
            and lowering it in the <see cref="M:C1.Win.C1Preview.C1PreviewPane.BusySection.Dispose" /> method.
            <para>
            Usage:
            </para><code>
            using (new busy = BusySection(previewPane)) { ..code... }.
            </code></summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.BusySection.#ctor(C1.Win.C1Preview.C1PreviewPane)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.C1PreviewPane.BusySection" /> class,
            raises the <see cref="P:C1.Win.C1Preview.C1PreviewPane.Busy" /> flag on <paramref name="pane" />.
            </summary>
      <param name="pane">The owner preview pane.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewPane.BusySection.Dispose">
      <summary>
            Disposes the busy section,
            lowers the <see cref="P:C1.Win.C1Preview.C1PreviewPane.Busy" /> flag on the preview pane.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.VisitedDocumentAddingEventHandler">
      <summary>
            Represents a method that can handle the <see cref="E:C1.Win.C1Preview.C1PreviewPane.VisitedDocumentAdding" /> event
            (occurring when a new item is being added to the <see cref="P:C1.Win.C1Preview.C1PreviewPane.VisitedDocuments" /> collection).
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">
        <see cref="T:C1.Win.C1Preview.VisitedDocumentAddingEventArgs" /> object containing event data.</param>
    </member>
    <member name="T:C1.Win.C1Preview.VisitedDocumentAddingEventArgs">
      <summary>
            Contains the data for the <see cref="E:C1.Win.C1Preview.C1PreviewPane.VisitedDocumentAdding" /> event of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.VisitedDocumentAddingEventArgs.#ctor(C1.Win.C1Preview.VisitedDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.VisitedDocumentAddingEventArgs" /> class.
            </summary>
      <param name="visitedDocument">The <see cref="P:C1.Win.C1Preview.VisitedDocumentAddingEventArgs.VisitedDocument" /> object.</param>
    </member>
    <member name="P:C1.Win.C1Preview.VisitedDocumentAddingEventArgs.VisitedDocument">
      <summary>
            The <see cref="P:C1.Win.C1Preview.VisitedDocumentAddingEventArgs.VisitedDocument" /> object that is about to be added.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.HistoryItemAddingEventHandler">
      <summary>
            Represents a method that can handle the <see cref="E:C1.Win.C1Preview.C1PreviewPane.HistoryItemAdding" /> event
            (occurring when a new item is being added to the <see cref="P:C1.Win.C1Preview.C1PreviewPane.ViewHistory" /> collection).
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">
        <see cref="T:C1.Win.C1Preview.HistoryItemAddingEventArgs" /> object containing event data.</param>
    </member>
    <member name="T:C1.Win.C1Preview.HistoryItemAddingEventArgs">
      <summary>
            Contains data for the <see cref="E:C1.Win.C1Preview.C1PreviewPane.HistoryItemAdding" /> event of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.HistoryItemAddingEventArgs.#ctor(C1.Win.C1Preview.ViewHistoryItem)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.HistoryItemAddingEventArgs" /> class.
            </summary>
      <param name="historyItem">The <see cref="T:C1.Win.C1Preview.ViewHistoryItem" /> object.</param>
    </member>
    <member name="P:C1.Win.C1Preview.HistoryItemAddingEventArgs.HistoryItem">
      <summary>
            The <see cref="T:C1.Win.C1Preview.ViewHistoryItem" /> object that is about to be added.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.SaveVisitedDocumentEventHandler">
      <summary>
            Represents a method that can handle the <see cref="E:C1.Win.C1Preview.C1PreviewPane.SaveVisitedDocument" /> event
            on a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            The handler should save the document to custom user-defined storage.
            </summary>
      <param name="sender">The source of event.</param>
      <param name="e">
        <see cref="T:C1.Win.C1Preview.SaveVisitedDocumentEventArgs" /> object containing event data.</param>
      <seealso cref="E:C1.Win.C1Preview.C1PreviewPane.SaveVisitedDocument" />
      <seealso cref="E:C1.Win.C1Preview.C1PreviewPane.LoadVisitedDocument" />
      <seealso cref="P:C1.Win.C1Preview.C1PreviewPane.HistoryOptions" />
    </member>
    <member name="T:C1.Win.C1Preview.SaveVisitedDocumentEventArgs">
      <summary>
            Contains data for the <see cref="E:C1.Win.C1Preview.C1PreviewPane.SaveVisitedDocument" /> event of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
      <seealso cref="T:C1.Win.C1Preview.SaveVisitedDocumentEventHandler" />
      <seealso cref="T:C1.Win.C1Preview.LoadVisitedDocumentEventHandler" />
    </member>
    <member name="M:C1.Win.C1Preview.SaveVisitedDocumentEventArgs.#ctor(System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.SaveVisitedDocumentEventArgs" /> class.
            </summary>
      <param name="userData">Arbitrary data associated with the current instance.</param>
    </member>
    <member name="P:C1.Win.C1Preview.SaveVisitedDocumentEventArgs.UserData">
      <summary>
            Gets or sets arbitrary data associated with the current object.
            Typically this data is filled on saving a document,
            and can be used when that document is loaded.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.LoadVisitedDocumentEventHandler">
      <summary>
            Represents a method that can handle the <see cref="E:C1.Win.C1Preview.C1PreviewPane.LoadVisitedDocument" /> event
            on a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            The handler should load the document from custom user-defined storage.
            </summary>
      <param name="sender">The source of event.</param>
      <param name="e">
        <see cref="T:C1.Win.C1Preview.LoadVisitedDocumentEventArgs" /> object containing event data.</param>
      <seealso cref="E:C1.Win.C1Preview.C1PreviewPane.LoadVisitedDocument" />
      <seealso cref="E:C1.Win.C1Preview.C1PreviewPane.SaveVisitedDocument" />
      <seealso cref="P:C1.Win.C1Preview.C1PreviewPane.HistoryOptions" />
    </member>
    <member name="T:C1.Win.C1Preview.LoadVisitedDocumentEventArgs">
      <summary>
            Contains data for the <see cref="E:C1.Win.C1Preview.C1PreviewPane.LoadVisitedDocument" /> event of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
      <seealso cref="T:C1.Win.C1Preview.LoadVisitedDocumentEventHandler" />
      <seealso cref="T:C1.Win.C1Preview.SaveVisitedDocumentEventHandler" />
    </member>
    <member name="M:C1.Win.C1Preview.LoadVisitedDocumentEventArgs.#ctor(System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.LoadVisitedDocumentEventArgs" /> class.
            </summary>
      <param name="userData">Arbitrary data associated with the current instance.</param>
    </member>
    <member name="P:C1.Win.C1Preview.LoadVisitedDocumentEventArgs.Document">
      <summary>
            Gets or sets the document being loaded.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.HyperlinkEventArgs">
      <summary>
            Provides data for <see cref="E:C1.Win.C1Preview.C1PreviewPane.HyperlinkMouseEnter" /> and
            <see cref="E:C1.Win.C1Preview.C1PreviewPane.HyperlinkMouseLeave" /> events of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.HyperlinkEventArgs.#ctor(C1.C1Preview.C1Hyperlink)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.HyperlinkEventArgs" /> class.
            </summary>
      <param name="hyperlink">Hyperlink data.</param>
    </member>
    <member name="P:C1.Win.C1Preview.HyperlinkEventArgs.Hyperlink">
      <summary>
            Gets the hyperlink associated with the event.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.HyperlinkEventHandler">
      <summary>
            Represents a handler for <see cref="E:C1.Win.C1Preview.C1PreviewPane.HyperlinkMouseEnter" /> and
            <see cref="E:C1.Win.C1Preview.C1PreviewPane.HyperlinkMouseLeave" /> events of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">Data describing the event.</param>
    </member>
    <member name="T:C1.Win.C1Preview.HyperlinkJumpEventArgs">
      <summary>
            Provides data for <see cref="E:C1.Win.C1Preview.C1PreviewPane.HyperlinkJump" /> event
            of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.HyperlinkJumpEventArgs.#ctor(C1.C1Preview.C1Hyperlink)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.HyperlinkJumpEventArgs" /> class.
            </summary>
      <param name="hyperlink">Hyperlink data.</param>
    </member>
    <member name="P:C1.Win.C1Preview.HyperlinkJumpEventArgs.Cancel">
      <summary>
            Gets or sets a value indicating whether the hyperlink jump should be canceled.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.HyperlinkJumpEventHandler">
      <summary>
            Represents a handler for <see cref="E:C1.Win.C1Preview.C1PreviewPane.HyperlinkJump" /> event
            of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">Data describing the event.</param>
    </member>
    <member name="T:C1.Win.C1Preview.HyperlinkMouseEventArgs">
      <summary>
            Provides data for <see cref="E:C1.Win.C1Preview.C1PreviewPane.HyperlinkMouseMove" />,
            <see cref="E:C1.Win.C1Preview.C1PreviewPane.HyperlinkMouseDown" /> and <see cref="E:C1.Win.C1Preview.C1PreviewPane.HyperlinkMouseUp" />
            events of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.HyperlinkMouseEventArgs.#ctor(System.Windows.Forms.MouseEventArgs,C1.C1Preview.C1Hyperlink)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.HyperlinkMouseEventArgs" /> class.
            </summary>
      <param name="e">Mouse event data.</param>
      <param name="hyperlink">Hyperlink data.</param>
    </member>
    <member name="P:C1.Win.C1Preview.HyperlinkMouseEventArgs.Hyperlink">
      <summary>
            Gets the hyperlink associated with the event.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.HyperlinkMouseEventHandler">
      <summary>
            Represents a handler for <see cref="E:C1.Win.C1Preview.C1PreviewPane.HyperlinkMouseMove" />,
            <see cref="E:C1.Win.C1Preview.C1PreviewPane.HyperlinkMouseDown" /> and <see cref="E:C1.Win.C1Preview.C1PreviewPane.HyperlinkMouseUp" /> events
            of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">Data describing the event.</param>
    </member>
    <member name="T:C1.Win.C1Preview.FormsUserActionEventArgs">
      <summary>
            Provides data for the <see cref="E:C1.Win.C1Preview.C1PreviewPane.FormsUserAction" /> event of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.FormsUserActionEventArgs.#ctor(C1.C1Preview.RenderInputBase,C1.C1Preview.UserActionEnum,C1.C1Preview.InputAction)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.FormsUserActionEventArgs" /> class.
            </summary>
      <param name="renderObject">The render input object that caused the event.</param>
      <param name="userAction">The user action.</param>
      <param name="inputAction">The input action.</param>
    </member>
    <member name="P:C1.Win.C1Preview.FormsUserActionEventArgs.UserAction">
      <summary>
            Gets the user action (Click, MouseDown, MouseUp etc.).
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.FormsUserActionEventArgs.InputAction">
      <summary>
            Gets the <see cref="T:C1.C1Preview.InputAction" /> object that will handle the user action by default. 
            This parameter can be <b>null</b> if no action is associated with the specified user action.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.FormsUserActionEventArgs.RenderObject">
      <summary>
            Gets the <see cref="T:C1.C1Preview.RenderInputBase" /> object corresponding to the input control which
            caused the event.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.FormsUserActionEventArgs.Handled">
      <summary>
            Gets or sets a value indicating whether the default handling of the user action 
            should take place. Set this property to <b>true</b> to cancel the default handling.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.FormsUserActionEventHandler">
      <summary>
            Represents a method that can handle the <see cref="E:C1.Win.C1Preview.C1PreviewPane.FormsUserAction" /> event
            of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">Event data.</param>
    </member>
    <member name="T:C1.Win.C1Preview.DocumentActionEventArgs">
      <summary>
            Provides data for the <see cref="E:C1.Win.C1Preview.C1PreviewPane.PreviewAction" /> event of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.DocumentActionEventArgs.#ctor(C1.C1Preview.ActionHandlerBase)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.DocumentActionEventArgs" /> class.
            </summary>
      <param name="actionHandler">The action handler.</param>
    </member>
    <member name="P:C1.Win.C1Preview.DocumentActionEventArgs.ActionHandler">
      <summary>
            Gets the <see cref="T:C1.C1Preview.ActionHandlerBase" /> object associated with the event.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.DocumentActionEventArgs.Handled">
      <summary>
            Gets or sets a value that indicates whether the event 
            handler has completely handled the event or whether 
            the preview pane should continue its own processing. 
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.DocumentActionEventHandler">
      <summary>
            Represents a method that can handle the <see cref="E:C1.Win.C1Preview.C1PreviewPane.PreviewAction" /> event
            of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">Event data.</param>
    </member>
    <member name="T:C1.Win.C1Preview.CompatibilityOptions">
      <summary>
            Represents options that improve compatibility
            with previous versions of <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.CompatibilityOptions.AssignFrom(C1.Win.C1Preview.CompatibilityOptions)">
      <summary>
            Copies properties from another object into this object.
            </summary>
      <param name="source">The source object, properties of which are copied.</param>
    </member>
    <member name="M:C1.Win.C1Preview.CompatibilityOptions.Reset">
      <summary>
            Resets properties of this object to default values.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.CompatibilityOptions.ShouldSerialize">
      <summary>
            Gets a value indicating whether any properties on the current object
            have non-default values.
            </summary>
      <returns>
        <b>true</b> if any property on the current object has non-default value, <b>false</b> otherwise.</returns>
    </member>
    <member name="P:C1.Win.C1Preview.CompatibilityOptions.LegacyPageBorder">
      <summary>
            Gets or sets a value indicating whether <see cref="T:C1.Win.C1Preview.C1PreviewPane" />
            should use legacy method to draw shadows around pages.
            The default value is <b>false</b>.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.CompatibilityOptions.LegacyMouseTrack">
      <summary>
            Gets or sets a value indicating whether <see cref="T:C1.Win.C1Preview.C1PreviewPane" />
            should use legacy method to draw mouse tracks on rulers if <see cref="P:C1.Win.C1Preview.C1PreviewPane.TrackMousePosition" /> is <b>true</b>.
            The default value is <b>false</b>.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.CompatibilityOptions.HideMarginsOnSingleClick">
      <summary>
            Gets or sets a value indicating whether a single mouse click (rather than a double click)
            should hide/show page margins in <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            The default value is <b>false</b>.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.CompatibilityOptions.DefaultSmoothingMode">
      <summary>
            Gets or sets a value indicating whether defalut <b>System.Drawing.Drawing2D.SmoothingMode</b>
            is used to draw preview pages.
            If this value is <b>false</b> (which is the default), pages are drawn using antialiased smoothing mode.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.CompatibilityOptions.ClipboardHtmlSupport">
      <summary>
            Gets or sets a value indicating whether CF_HTML clipboard format is provided when copying selection to clipboard
            (along with plain text which is provided regardless).
            <para>
            This option is <b>true</b> by default, which allows to preserve some formatting
            in the pasted text to applications that recognize the CF_HTML format.
            (How much of the original formatting is preserved depends on the application.)
            </para><para>
            Turn this option off to only copy plain text to clipboard (as in versions prior to 2013v1).
            </para></summary>
    </member>
    <member name="T:C1.Win.C1Preview.InitializeSSRSParametersDialogEventArgs">
      <summary>
            TBD:
            Provides data for <see cref="E:C1.Win.C1Preview.C1PreviewPane.InitializeSSRSParametersDialog" /> event.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.InitializeSSRSParametersDialogEventArgs.Dialog">
      <summary>
            TBD:
            Gets a <see cref="T:System.Windows.Forms.Form" /> object that is about to be displayed.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.InitializeSSRSParametersDialogEventArgs.UserAction">
      <summary>
            TBD:
            Gets a value indicating whether the user causes dialog to show.
            This property is <b>false</b> when dialog showed automatically before rendering a document,
            <b>true</b> indicates that user pressed "Parameters" button in toolbar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.InitializeSSRSParametersDialogEventArgs.DocumentSource">
      <summary>
            TBD:
            Gets a <see cref="T:C1.Win.C1Document.C1DocumentSource" /> object parameters of that are edited.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.InitializeSSRSParametersDialogEventArgs.Parameters">
      <summary>
            TBD:
            Gets a <see cref="T:C1.Win.C1Document.ParameterCollection" /> collection, shortcut for the <see cref="P:C1.Win.C1Document.C1DocumentSource.Parameters" /> property.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.InitializeSSRSParametersDialogEventArgs.ShowDialog">
      <summary>
            TBD:
            Gets or sets a value that determines whether the component should display the parameters dialog.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.InitializeSSRSParametersDialogEventHandler">
      <summary>
            TBD:
            Represents the method that will handle the <see cref="E:C1.Win.C1Preview.C1PreviewPane.InitializeSSRSParametersDialog" /> event.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PreviewTextSearchPanel">
      <summary>
            Displays a text search panel allowing to find text in the connected preview pane.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.C1PreviewTextSearchPanel" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.DefWndProc(System.Windows.Forms.Message@)">
      <summary>
            For internal use.
            </summary>
      <param name="m">
      </param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
      <summary>
            Scales a control's location, size, padding and margin.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.OnVisibleChanged(System.EventArgs)">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.OnPropertyChanged(System.String)">
      <summary>
            Raises the PropertyChanged event.
            </summary>
      <param name="propertyName">The name of the changed property.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ShouldSerializePreviewPane">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.PreviewPane" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.PreviewPane" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResetPreviewPane">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.PreviewPane" /> property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ShouldSerializeHideButtonText">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.HideButtonText" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.HideButtonText" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResetHideButtonText">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.HideButtonText" /> property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ShouldSerializeSearchButtonText">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchButtonText" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchButtonText" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResetSearchButtonText">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchButtonText" /> property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ShouldSerializeFindWhatText">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.FindWhatText" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.FindWhatText" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResetFindWhatText">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.FindWhatText" /> property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ShouldSerializeMatchCaseText">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.MatchCaseText" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.MatchCaseText" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResetMatchCaseText">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.MatchCaseText" /> property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ShouldSerializeMatchWordText">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.MatchWordText" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.MatchWordText" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResetMatchWordText">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.MatchWordText" /> property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ShouldSerializeSearchUpText">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchUpText" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchUpText" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResetSearchUpText">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchUpText" /> property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ShouldSerializeTextCaptionText">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.TextCaptionText" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.TextCaptionText" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResetTextCaptionText">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.TextCaptionText" /> property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ShouldSerializePageCaptionText">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.PageCaptionText" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.PageCaptionText" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResetPageCaptionText">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.PageCaptionText" /> property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ShouldSerializeSearchTextFont">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchTextFont" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchTextFont" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResetSearchTextFont">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchTextFont" /> property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ShouldSerializeSearchTextForeColor">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchTextForeColor" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchTextForeColor" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResetSearchTextForeColor">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchTextForeColor" /> property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ShouldSerializeSearchTextBackColor">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchTextBackColor" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchTextBackColor" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResetSearchTextBackColor">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchTextBackColor" /> property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ShouldSerializeResultListFont">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResultListFont" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResultListFont" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResetResultListFont">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResultListFont" /> property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ShouldSerializeResultListForeColor">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResultListForeColor" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResultListForeColor" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResetResultListForeColor">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResultListForeColor" /> property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ShouldSerializeResultListBackColor">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResultListBackColor" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResultListBackColor" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResetResultListBackColor">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResultListBackColor" /> property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResetSearch">
      <summary>
            Clears the search text and removes selection from the preview pane.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.DoSearchAgain">
      <summary>
            Repeats the last search.
            </summary>
      <returns>
        <b>True</b> if the search text was found, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.DoSearchAgainBackward">
      <summary>
            Repeats the last search and select the previous occurrence.
            </summary>
      <returns>
        <b>True</b> if the search text was found, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewTextSearchPanel.DoSearch">
      <summary>
            Shows the text search panel, puts focus into the search text box.
            </summary>
      <returns>
        <b>True</b>.</returns>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.ScaleChildren">
      <summary>
            Gets a value that determines the scaling of child controls.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewTextSearchPanel.PropertyChanged">
      <summary>
            Occurs when a property of the text search panel that is not inherited from the base class changes.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.DesiredVisible">
      <summary>
            Gets or sets a value indicating whether the text search panel should be shown.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.PreviewPane">
      <summary>
            Gets or sets the preview pane to which this text search panel is connected.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchTextBox">
      <summary>
            Gets the text box for entering the search text.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.HideButton">
      <summary>
            Gets the button that hides the text search panel.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchButton">
      <summary>
            Gets the button that starts the search.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.FindWhatLabel">
      <summary>
            Gets the label containing the "Find What" label.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.MatchCaseCheckBox">
      <summary>
            Gets the "Match Case" checkbox.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.MatchWordCheckBox">
      <summary>
            Gets the "Match Whole Word" checkbox.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchUpCheckBox">
      <summary>
            Gets the "Search Up" checkbox.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchResultsListView">
      <summary>
            Gets the search results list view.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.HideButtonText">
      <summary>
            Gets or sets the text of the hide button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchButtonText">
      <summary>
            Gets or sets the text of the hide button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.FindWhatText">
      <summary>
            Gets or sets the text of the "Find What:" label.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.MatchCaseText">
      <summary>
            Gets or sets the text of the "Match Case" checkbox.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.MatchWordText">
      <summary>
            Gets or sets the text of the "Math Whole Word" checkbox.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchUpText">
      <summary>
            Gets or sets the text of the "Search Up" checkbox.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.TextCaptionText">
      <summary>
            Gets or sets the text of the caption of the "Text" column in the result list.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.PageCaptionText">
      <summary>
            Gets or sets the text of the caption of the "Page" column in the result list.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.FlatStyle">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Forms.FlatStyle" /> of buttons and checkboxes on the text search panel.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchText">
      <summary>
            Gets or sets the search text.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchTextFont">
      <summary>
            Gets or sets the search text font.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchTextForeColor">
      <summary>
            Gets or sets the search text color.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchTextBackColor">
      <summary>
            Gets or sets the search text background color.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.SearchTextBorderStyle">
      <summary>
            Gets or sets the search text border style.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResultListFont">
      <summary>
            Gets or sets the search result list font.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResultListForeColor">
      <summary>
            Gets or sets the search result list text color.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResultListBackColor">
      <summary>
            Gets or sets the search result list background color.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResultListHotTracking">
      <summary>
            Gets or sets a value indicating whether the search result list items appear as links when the mouse hovers over them.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResultListHoverSelection">
      <summary>
            Gets or sets a value indicating whether a search result list item is selected when the mouse hovers over it.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResultListHideSelection">
      <summary>
            Gets or sets a value indicating whether the search result list selection is removed when the control loses focus.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.ResultListBorderStyle">
      <summary>
            Gets or sets the border style of the search result list.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewTextSearchPanel.DesiredVisibleChanged">
      <summary>
            Event fired when the <see cref="P:C1.Win.C1Preview.C1PreviewTextSearchPanel.DesiredVisible" /> property has changed.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PreviewThumbnailView">
      <summary>
            Displays a list of thumbnails representing the pages of the connected preview pane.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewThumbnailView.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.C1PreviewThumbnailView" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewThumbnailView.Dispose(System.Boolean)">
      <summary>
            For internal use.
            </summary>
      <param name="disposing">
      </param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewThumbnailView.DefWndProc(System.Windows.Forms.Message@)">
      <summary>
            For internal use.
            </summary>
      <param name="m">
      </param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewThumbnailView.OnSelectedIndexChanged(System.EventArgs)">
      <summary>
            For internal use.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewThumbnailView.OnPropertyChanged(System.String)">
      <summary>
            Raises the PropertyChanged event.
            </summary>
      <param name="propertyName">The name of the changed property.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewThumbnailView.ShouldSerializePreviewPane">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PreviewThumbnailView.PreviewPane" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PreviewThumbnailView.PreviewPane" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewThumbnailView.ResetPreviewPane">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PreviewThumbnailView.PreviewPane" /> property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewThumbnailView.ShouldSerializePageNoFmt">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PreviewThumbnailView.PageNoFmt" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PreviewThumbnailView.PageNoFmt" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewThumbnailView.ShouldSerializeThumbnailSize">
      <summary>
            Tests whether the ThumbnailSize property should be serialized.
            </summary>
      <returns>True if ThumbnailSize should be serialized, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewThumbnailView.ResetThumbnailSize">
      <summary>
            Resets the ThumbnailSize property to the default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewThumbnailView.MakeThumbnail(System.Drawing.Image,System.Drawing.Rectangle@)">
      <summary>
            Makes the thumbnail of a page image.
            </summary>
      <param name="image">The page image.</param>
      <param name="pageRectangleInThumb">OUT: Rectangle within the thumbnail
            corresponding to the page bounds.</param>
      <returns>The image representing the thumbnail.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewThumbnailView.MakeThumbnail(System.Drawing.Image)">
      <summary>
            Makes the thumbnail of a page image.
            </summary>
      <param name="image">The page image.</param>
      <returns>The image representing the thumbnail.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewThumbnailView.MakeThumbnail(System.Drawing.Image,System.Drawing.Size,System.Drawing.Pen)">
      <summary>
            Makes the thumbnail of a page image.
            </summary>
      <param name="image">The page image.</param>
      <param name="size">The size of the thumbnail image.</param>
      <param name="outlinePen">The pen used to draw page outline.</param>
      <returns>The image representing the thumbnail.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewThumbnailView.MakeThumbnail(System.Drawing.Image,System.Boolean,System.Drawing.Size,System.Drawing.Pen,System.Drawing.Rectangle@)">
      <summary>
            Makes the thumbnail of a page image.
            </summary>
      <param name="image">The page image.</param>
      <param name="useImageAsThumbnail">Indicates whether to use image as thumbnail.</param>
      <param name="size">The size of the thumbnail image.</param>
      <param name="outlinePen">The pen used to draw page outline.</param>
      <param name="imageRectangle">OUT: Rectangle within the thumbnail
            corresponding to the page bounds.</param>
      <returns>The image representing the thumbnail.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewThumbnailView.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            For internal use.
            </summary>
      <param name="levent">
      </param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewThumbnailView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)">
      <summary>
            For internal use.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewThumbnailView.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
      <summary>
            For internal use.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewThumbnailView.ShouldSerializeCursor">
      <summary>
            For internal use.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewThumbnailView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            For internal use.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewThumbnailView.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            For internal use.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewThumbnailView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            For internal use.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewThumbnailView.DefaultSize">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.C1PreviewThumbnailView.PropertyChanged">
      <summary>
            Occurs when a property of the thumbnail view that is not inherited from the base class changes.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewThumbnailView.Items">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewThumbnailView.PreviewPane">
      <summary>
            Gets or sets the preview pane to which this thumbnail view is connected.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewThumbnailView.PageNoFmt">
      <summary>
            Gets or sets the format used to display the page number below the page thumbnail.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewThumbnailView.ThumbnailNavigation">
      <summary>
            Gets or sets a value indicating whether thumbnails should show the navigation rectangle which can be dragged or resized using the mouse.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewThumbnailView.UseImageAsThumbnail">
      <summary>
            Gets or sets a value indicating whether the page image obtained from the preview
            pane should be used as the thumbnail (if this property is false, Image.GetThumbnailImage
            is called to obtain the thumbnail).
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewThumbnailView.ThumbnailSize">
      <summary>
            Gets or sets the size of page thumbnails.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewThumbnailView.Cursor">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PrintPreviewControl">
      <summary>
            Represents an integrated preview control, containing a preview pane, a navigation panel, toolbars and a status bar.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.#ctor">
      <summary>
            Initializes a new instance of the C1PrintPreviewControl class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.DefWndProc(System.Windows.Forms.Message@)">
      <summary>
            For internal use.
            </summary>
      <param name="m">
      </param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.ShouldSerializeThumbnailViewCaption">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PrintPreviewControl.ThumbnailViewCaption" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PrintPreviewControl.ThumbnailViewCaption" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.ResetThumbnailViewCaption">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PrintPreviewControl.ThumbnailViewCaption" /> property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.ShouldSerializeOutlineViewCaption">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PrintPreviewControl.OutlineViewCaption" /> property should be serialized.
            </summary>
      <returns>
        <b>true</b> if <see cref="P:C1.Win.C1Preview.C1PrintPreviewControl.OutlineViewCaption" /> should be serialized, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.ResetOutlineViewCaption">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PrintPreviewControl.OutlineViewCaption" /> property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.ShouldSerializeToolBars">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PrintPreviewControl.ToolBars" /> property should be persisted. 
            </summary>
      <returns>
        <b>true</b> if the property value has changed from its default; <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.ResetToolBars">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PrintPreviewControl.ToolBars" /> property to its default value.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.DefaultSize">
      <summary>
            Gets the default size for the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.TopToolStripPanelVisible">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.BottomToolStripPanelVisible">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.LeftToolStripPanelVisible">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.RightToolStripPanelVisible">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.ContentPanel">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.LeftToolStripPanel">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.TopToolStripPanel">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.RightToolStripPanel">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.BottomToolStripPanel">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.ExportOptions">
      <summary>
            Gets options controlling the behavior of export modules.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewPane">
      <summary>
            Gets the preview pane.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.Document">
      <summary>
            Gets or sets the document shown by the preview.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.SsrsPaginated">
      <summary>
            Gets or sets whether an SSRS report should appear in paginated mode (for printing) or in RPL mode (interactive).
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.AvailablePreviewActions">
      <summary>
            Gets or sets flags indicating which tools should be available in the preview.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.NavigationPanelVisible">
      <summary>
            Gets or sets a value indicating whether the navigation panel should be visible in the preview.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.StatusBarVisible">
      <summary>
            Gets or sets a value indicating whether the status bar should be visible in the preview.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.TextSearchPanelVisible">
      <summary>
            Gets or sets a value indicating whether the text search panel should be visible in the preview.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.TextSearchUIStyle">
      <summary>
            Gets or sets the type of UI used for text search.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.ImageSet">
      <summary>
            Gets or sets a value indicating which set of predefined images is used by the preview.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.ThumbnailViewCaption">
      <summary>
            Gets or sets the thumbnail view caption.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.OutlineViewCaption">
      <summary>
            Gets or sets the outline view caption.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewThumbnailView">
      <summary>
            Gets the preview thumbnails view.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewOutlineView">
      <summary>
            Gets the preview outline view.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewTextSearchPanel">
      <summary>
            Gets the preview text search panel.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewProgressBar">
      <summary>
            Gets the preview progress bar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewStatusText">
      <summary>
            Gets the preview status.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewNavigationPanel">
      <summary>
            Gets the preview navigation panel.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewStatusBar">
      <summary>
            Gets the preview status bar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.ToolBars">
      <summary>
            Gets the preview control toolbars.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBars">
      <summary>
            Represents toolbars used by the preview control.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBars.ShouldSerializeFile">
      <summary>
            Indicates whether the File property should be persisted. 
            </summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBars.ResetFile">
      <summary>
            Resets the File property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBars.ShouldSerializePage">
      <summary>
            Indicates whether the Page property should be persisted. 
            </summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBars.ResetPage">
      <summary>
            Resets the Page property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBars.ShouldSerializeNavigation">
      <summary>
            Indicates whether the Navigation property should be persisted. 
            </summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBars.ResetNavigation">
      <summary>
            Resets the Navigation property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBars.ShouldSerializeZoom">
      <summary>
            Indicates whether the Zoom property should be persisted. 
            </summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBars.ResetZoom">
      <summary>
            Resets the Zoom property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBars.ShouldSerializeText">
      <summary>
            Indicates whether the Text property should be persisted. 
            </summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBars.ResetText">
      <summary>
            Resets the Text property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBars.ShouldSerializeSearch">
      <summary>
            Indicates whether the Search property should be persisted. 
            </summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBars.ResetSearch">
      <summary>
            Resets the Search property to its default value.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBars.Owner">
      <summary>
            Gets the owner of the toolbars.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBars.File">
      <summary>
            Gets the File toolbar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBars.Page">
      <summary>
            Gets the Page toolbar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBars.Navigation">
      <summary>
            Gets the Navigation toolbar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBars.Zoom">
      <summary>
            Gets the Zoom toolbar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBars.Text">
      <summary>
            Gets the Text toolbar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBars.Search">
      <summary>
            Gets the search toolbar.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar">
      <summary>
            Represents a single preview toolbar.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.ShouldSerialize">
      <summary>
            Indicates whether this toolbar should be persisted. 
            </summary>
      <returns>true if the toolbar has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.Reset">
      <summary>
            Resets this toolbar to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.ShouldSerializeToolStrip">
      <summary>
            Indicates whether the <see cref="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.ToolStrip" /> property should be persisted. 
            </summary>
      <returns>true if the property value has changed from its default; otherwise, false.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.ResetToolStrip">
      <summary>
            Resets the <see cref="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.ToolStrip" /> property to its default value.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.GetToolStripItemPropertyName(System.Windows.Forms.ToolStripItem)">
      <summary>
            Returns a tool strip item property name.
            </summary>
      <param name="toolStripItem">The tool strip item.</param>
      <returns>The property name.</returns>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.Owner">
      <summary>
            Gets the owner of this toolbar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.PreviewControl">
      <summary>
            Gets the preview control containing this toolbar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.ToolStrip">
      <summary>
            Gets the <b>ToolStrip</b> containing the buttons in this toolbar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.Visible">
      <summary>
            Gets or sets a value indicating whether this toolbar is visible.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.PreviewAction">
      <summary>
            Gets <see cref="T:C1.Win.C1Preview.C1PreviewActionFlags" /> describing the content of this toolbar.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.TypeConverter">
      <summary>
            For internal use.
            Provides design-time properties which can be edited in a property grid.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            For internal use.
            </summary>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
            For internal use.
            </summary>
      <param name="context">
      </param>
      <param name="value">
      </param>
      <param name="attributes">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.TypeConverter.ToolStripPropTypeConverter">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.TypeConverter.ToolStripPropTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            For internal use.
            </summary>
      <param name="context">
      </param>
      <param name="culture">
      </param>
      <param name="value">
      </param>
      <param name="destinationType">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.TypeConverter.ToolStripPropTypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            For internal use.
            </summary>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.TypeConverter.ToolStripPropTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
            For internal use.
            </summary>
      <param name="context">
      </param>
      <param name="value">
      </param>
      <param name="attributes">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.TypeConverter.ToolStripItemPropTypeConverter">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.TypeConverter.ToolStripItemPropTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            For internal use.
            </summary>
      <param name="context">
      </param>
      <param name="culture">
      </param>
      <param name="value">
      </param>
      <param name="destinationType">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.TypeConverter.ToolStripItemPropTypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            For internal use.
            </summary>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewControl.PreviewToolBar.TypeConverter.ToolStripItemPropTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
            For internal use.
            </summary>
      <param name="context">
      </param>
      <param name="value">
      </param>
      <param name="attributes">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:C1.Win.C1Preview.C1PrintPreviewControl.FileToolBar">
      <summary>
            Represents file operations toolbar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.FileToolBar.PreviewAction">
      <summary>
            Gets <see cref="T:C1.Win.C1Preview.C1PreviewActionFlags" /> describing the content of this toolbar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.FileToolBar.Open">
      <summary>
            Gets the <b>Open</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.FileToolBar.Save">
      <summary>
            Gets the <b>Save</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.FileToolBar.Parameters">
      <summary>
            Gets the <b>Parameters</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.FileToolBar.PrintLayout">
      <summary>
            Gets the <b>PrintLayout</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.FileToolBar.PageSetup">
      <summary>
            Gets the <b>PageSetup</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.FileToolBar.Print">
      <summary>
            Gets the <b>Print</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.FileToolBar.Reflow">
      <summary>
            Gets the <b>Reflow</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.FileToolBar.Stop">
      <summary>
            Gets the <b>Stop</b> toolstrip button.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PrintPreviewControl.PageToolBar">
      <summary>
            Represents page view operations toolbar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PageToolBar.PreviewAction">
      <summary>
            Gets <see cref="T:C1.Win.C1Preview.C1PreviewActionFlags" /> describing the content of this toolbar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PageToolBar.Single">
      <summary>
            Gets the <b>Single</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PageToolBar.Continuous">
      <summary>
            Gets the <b>Continuous</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PageToolBar.Facing">
      <summary>
            Gets the <b>Facing</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.PageToolBar.FacingContinuous">
      <summary>
            Gets the <b>FacingContinuous</b> toolstrip button.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PrintPreviewControl.NavigationToolBar">
      <summary>
            Represents navigation operations toolbar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.NavigationToolBar.PreviewAction">
      <summary>
            Gets <see cref="T:C1.Win.C1Preview.C1PreviewActionFlags" /> describing the content of this toolbar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.NavigationToolBar.NavigationPane">
      <summary>
            Gets the <b>NavigationPane</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.NavigationToolBar.GoFirst">
      <summary>
            Gets the <b>GoFirst</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.NavigationToolBar.GoPrev">
      <summary>
            Gets the <b>GoPrev</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.NavigationToolBar.LblPage">
      <summary>
            Gets the "page" toolstrip label.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.NavigationToolBar.PageNo">
      <summary>
            Gets the page number toolstrip textbox.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.NavigationToolBar.LblOfPages">
      <summary>
            Gets the "of X pages" toolstrip label.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.NavigationToolBar.GoNext">
      <summary>
            Gets the <b>GoNext</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.NavigationToolBar.GoLast">
      <summary>
            Gets the <b>GoLast</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.NavigationToolBar.HistoryPrev">
      <summary>
            Gets the <b>HistoryPrev</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.NavigationToolBar.HistoryNext">
      <summary>
            Gets the <b>HistoryNext</b> toolstrip button.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PrintPreviewControl.ZoomToolBar">
      <summary>
            Represents zooming operations toolbar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.ZoomToolBar.PreviewAction">
      <summary>
            Gets <see cref="T:C1.Win.C1Preview.C1PreviewActionFlags" /> describing the content of this toolbar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.ZoomToolBar.ZoomTool">
      <summary>
            Gets the <b>ZoomTool</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.ZoomToolBar.ZoomInTool">
      <summary>
            Gets the <b>zoom in tool</b> toolstrip menu item.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.ZoomToolBar.ZoomOutTool">
      <summary>
            Gets the <b>zoom out tool</b> toolstrip menu item.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.ZoomToolBar.ZoomOut">
      <summary>
            Gets the <b>ZoomOut</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.ZoomToolBar.ZoomFactor">
      <summary>
            Gets the zoom factor toolstrip textbox.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.ZoomToolBar.DropZoomFactor">
      <summary>
            Gets the zoom factor toolstrip dropdown.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.ZoomToolBar.ZoomIn">
      <summary>
            Gets the <b>ZoomIn</b> toolstrip button.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PrintPreviewControl.TextToolBar">
      <summary>
            Represents text operations toolbar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.TextToolBar.PreviewAction">
      <summary>
            Gets <see cref="T:C1.Win.C1Preview.C1PreviewActionFlags" /> describing the content of this toolbar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.TextToolBar.Hand">
      <summary>
            Gets the <b>Hand</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.TextToolBar.SelectText">
      <summary>
            Gets the <b>SelectText</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.TextToolBar.Find">
      <summary>
            Gets the <b>Find</b> toolstrip button.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PrintPreviewControl.SearchToolBar">
      <summary>
            Represents the search toolbar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.SearchToolBar.PreviewAction">
      <summary>
            Gets <see cref="T:C1.Win.C1Preview.C1PreviewActionFlags" /> describing the content of this toolbar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.SearchToolBar.SearchLabel">
      <summary>
            Gets the "Find:" search toolstrip label.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.SearchToolBar.SearchText">
      <summary>
            Gets the "Search Text" toolstrip text box.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.SearchToolBar.SearchNext">
      <summary>
            Gets the <b>Search Next</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.SearchToolBar.SearchPrevious">
      <summary>
            Gets the <b>Search Previous</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.SearchToolBar.MatchCase">
      <summary>
            Gets the <b>Match Case</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.SearchToolBar.MatchWholeWord">
      <summary>
            Gets the <b>Match Whole Word</b> toolstrip button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewControl.SearchToolBar.CloseSearch">
      <summary>
            Gets the <b>Close Search</b> toolstrip button.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1TextFragment">
      <summary>
            Represents a text fragment that can be selected,
            e.g. as used by <see cref="M:C1.Win.C1Preview.C1PreviewPane.SelectTextFragment(C1.Win.C1Preview.C1TextFragment)" /> method.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1TextFragment.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.C1TextFragment" /> class.
            </summary>
      <param name="pageIdx">0-based page index.</param>
      <param name="startPos">Fragment's start position.</param>
      <param name="length">Fragment's length.</param>
    </member>
    <member name="F:C1.Win.C1Preview.C1TextFragment.PageIdx">
      <summary>
            0-based page index.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1TextFragment.StartPos">
      <summary>
            Fragment's start position.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1TextFragment.Length">
      <summary>
            Fragment's length.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1TextFragment.Prefix">
      <summary>
            Text preceding the fragment.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1TextFragment.Text">
      <summary>
            The fragment's text.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1TextFragment.Suffix">
      <summary>
            Text following the fragment.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.VisitedDocumentStorageC1Doc">
      <summary>
            Represents visited document storage for <see cref="T:C1.C1Preview.C1PrintDocument" /> documents.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.VisitedDocumentStorage">
      <summary>
            Represents the contetn of a visited document in the visited documents
            history of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            The storage format depends on the type of the document
            (<see cref="T:C1.C1Preview.C1PrintDocument" />, .NET PrintDocument etc).
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.VisitedDocumentStorage.Finalize">
      <summary>
            Destroys the current instance.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.VisitedDocumentStorage.Dispose">
      <summary>
            Disposes the current document storage.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.VisitedDocumentStorage.CreateDocument">
      <summary>
            Creates a document based on the stored data.
            </summary>
      <returns>The created document.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.VisitedDocumentStorageC1Doc.CreateDocument(System.IO.Stream)">
      <summary>
            Creates an instance of a previously saved visited document.
            </summary>
      <param name="stream">Input stream containing document data.</param>
      <returns>
        <see cref="T:C1.C1Preview.C1PrintDocument" /> representing the visited document.</returns>
    </member>
    <member name="T:C1.Win.C1Preview.VisitedDocumentStorageMultiDoc">
      <summary>
            Represents visited document storage for <see cref="T:C1.C1Preview.C1MultiDocument" /> documents.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.VisitedDocumentStorageMultiDoc.CreateDocument(System.IO.Stream)">
      <summary>
            Creates an instance of a previously saved visited document.
            </summary>
      <param name="stream">Input stream containing document data.</param>
      <returns>
        <see cref="T:C1.C1Preview.C1PrintDocument" /> representing the visited document.</returns>
    </member>
    <member name="T:C1.Win.C1Preview.PreviewPageMultiDoc">
      <summary>
            Represents a page of a <see cref="T:C1.C1Preview.C1MultiDocument" /> in
            a <see cref="T:C1.Win.C1Preview.PreviewPages" /> collection.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.PreviewPageDocBase">
      <summary>
            Common base class for classes representing pages of <see cref="T:C1.C1Preview.C1PrintDocument" /> or
            <see cref="T:C1.C1Preview.C1MultiDocument" />.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.PreviewPageBase">
      <summary>
            The abstract base class for preview pages which are
            elements of <see cref="T:C1.Win.C1Preview.PreviewPages" /> collection.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPageBase.GetImage(System.Boolean)">
      <summary>
            Gets an image representing the current page.
            </summary>
      <param name="renderInputControls">Indicates whether input controls on the page
            should be rendered (if real controls will be created over the page, this flag must
            be set to false).</param>
      <returns>The page image.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPageBase.RefreshImage">
      <summary>
            Makes sure that the <see cref="T:System.Drawing.Image" /> property will return an up-to-date image
            the next time that property is queried. In particular, if the page image is cached,
            this method flushes the cache.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPageDocBase.#ctor(C1.C1Preview.IC1Document,System.Int32,System.Drawing.Drawing2D.SmoothingMode)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.PreviewPageC1Doc" /> class.
            </summary>
      <param name="doc">The page owner document.</param>
      <param name="pageIdx">The page index.</param>
      <param name="smoothingMode">Smoothing mode to use when drawing the page.</param>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPageDocBase.Finalize">
      <summary>
            Destructs the current object.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPageDocBase.MakeMetafile(System.Boolean)">
      <summary>
            Makes metafile representing the current page.
            </summary>
      <param name="renderInputControls">Indicates whether to render preview forms controls.</param>
      <returns>The metafile representing this page.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPageDocBase.GetImage(System.Boolean)">
      <summary>
            Gets an image representing the current page.
            </summary>
      <param name="renderInputControls">Indicates whether input controls on the page
            should be rendered (if real controls will be created over the page, this flag must
            be set to false).</param>
      <returns>The page image.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPageDocBase.RefreshImage">
      <summary>
            Flushes the cached page image.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.PreviewPageDocBase.PageIdx">
      <summary>
            Gets the page index.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPageMultiDoc.#ctor(C1.C1Preview.C1MultiDocument,System.Int32,System.Drawing.Drawing2D.SmoothingMode,System.Single,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.PreviewPageMultiDoc" /> class.
            </summary>
      <param name="doc">The page owner document.</param>
      <param name="pageIdx">The page index.</param>
      <param name="smoothingMode">Smoothing mode to use when drawing the page.</param>
      <param name="dpiX">The horizontal resolution.</param>
      <param name="dpiY">The vertical resolution.</param>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPageMultiDoc.MakeMetafile(System.Boolean)">
      <summary>
            Overridden. Makes metafile representing the current page.
            </summary>
      <param name="renderInputControls">Indicates whether to render preview forms controls.</param>
      <returns>The metafile representing this page.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPageMultiDoc.GetImage(System.Boolean)">
      <summary>
            Gets an image representing the current page.
            </summary>
      <param name="renderInputControls">Indicates whether input controls on the page
            should be rendered (if real controls will be created over the page, this flag must
            be set to false).</param>
      <returns>The page image.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPageMultiDoc.RefreshImage">
      <summary>
            Flushes the cached page image.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.VisitedDocumentStorageVNext">
      <summary>
            Represents visited document storage for <see cref="N:C1.Win.C1Document" /> documents.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.VisitedDocumentStorageVNext.CreateDocument(System.IO.Stream)">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.ExportOptions">
      <summary>
            Represents export options for all export formats.
            This class can be handled as a collection
            (see <see cref="P:C1.Win.C1Preview.ExportOptions.Count" /> property and indexer).
            <!-- TBD: find out how to reference indexer -
            cref="ExportOptions.Item(int)" - does not work.
            --></summary>
    </member>
    <member name="M:C1.Win.C1Preview.ExportOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.ExportOptions" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.ExportOptions.Reset">
      <summary>
            Resets all export options to their default values.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.ExportOptions.IndexByExportProvider(C1.C1Preview.Export.ExportProvider)">
      <summary>
            Searches the current <see cref="T:C1.Win.C1Preview.ExportOptions" /> for an index
            corresponding to the specified <see cref="T:C1.C1Preview.Export.ExportProvider" />.
            </summary>
      <param name="exportProvider">The <see cref="T:C1.C1Preview.Export.ExportProvider" /> to search for.</param>
      <returns>Index of the specified export provider in the current <see cref="T:C1.Win.C1Preview.ExportOptions" />,
            or <b>-1</b> if none was found.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.ExportOptions.IndexByExportProviderFormatKey(System.String)">
      <summary>
            Searches the current <see cref="T:C1.Win.C1Preview.ExportOptions" /> for an index
            corresponding to the specified format key (see <see cref="P:C1.C1Preview.Export.ExportProvider.FormatKey" />).
            </summary>
      <param name="exportProviderFormatKey">The <see cref="P:C1.C1Preview.Export.ExportProvider.FormatKey" /> to search for.</param>
      <returns>Index of the specified export provider in the current <see cref="T:C1.Win.C1Preview.ExportOptions" />,
            or <b>-1</b> if none was found.</returns>
    </member>
    <member name="P:C1.Win.C1Preview.ExportOptions.DefaultProvider">
      <summary>
            Gets or sets the default export provider.
            The default format is initially selected when showing the save file dialog.
            </summary>
      <seealso cref="P:C1.Win.C1Preview.ExportOptions.DefaultFormatKey" />
    </member>
    <member name="P:C1.Win.C1Preview.ExportOptions.Count">
      <summary>
            Gets the number of export formats in the current <see cref="T:C1.Win.C1Preview.ExportOptions" />.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.ExportOptions.Item(System.Int32)">
      <summary>
            Gets an <see cref="T:C1.Win.C1Preview.ExporterOptions" /> object by its index
            in the current <see cref="T:C1.Win.C1Preview.ExportOptions" />.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.ExportOptions.Item(System.Type)">
      <summary>
            Gets an <see cref="T:C1.Win.C1Preview.ExporterOptions" /> object by the type
            of its <see cref="T:C1.C1Preview.Export.ExportProvider" />.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.ExportOptions.Item(System.String)">
      <summary>
            Gets an <see cref="T:C1.Win.C1Preview.ExporterOptions" /> object by the format key
            of the export provider (see <see cref="P:C1.C1Preview.Export.ExportProvider.FormatKey" />).
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.ExportOptions.TypeConverter">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.ExporterOptions">
      <summary>
            Represents options for a specific export format.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.ExporterOptions.#ctor(C1.C1Preview.Export.ExportProvider)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.ExporterOptions" /> class.
            </summary>
      <param name="exportProvider">The <see cref="P:C1.Win.C1Preview.ExporterOptions.ExportProvider" /> associated with this instance.</param>
    </member>
    <member name="M:C1.Win.C1Preview.ExporterOptions.#ctor(C1.C1Preview.Export.ExportProvider,System.String,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.ExporterOptions" /> class.
            </summary>
      <param name="exportProvider">The <see cref="P:C1.Win.C1Preview.ExporterOptions.ExportProvider" /> associated with this instance.</param>
      <param name="optionsDialogClassName">The options dialog class name.</param>
      <param name="enabled">Indicates whether this export format is enabled.</param>
      <param name="showOptions">Indicates whether to show options to the user.</param>
      <param name="preview">Indicates whether to preview the exported document by default.</param>
    </member>
    <member name="M:C1.Win.C1Preview.ExporterOptions.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.ExporterOptions" /> class.
            </summary>
      <param name="exportProviderFormatKey">The export format key associated with this instance.</param>
      <param name="optionsDialogClassName">The options dialog class name.</param>
      <param name="enabled">Indicates whether this export format is enabled.</param>
      <param name="showOptions">Indicates whether to show options to the user.</param>
      <param name="preview">Indicates whether to preview the exported document by default.</param>
    </member>
    <member name="M:C1.Win.C1Preview.ExporterOptions.AssignFrom(C1.Win.C1Preview.ExporterOptions)">
      <summary>
            Assigns (copies) properties from another <see cref="T:C1.Win.C1Preview.ExporterOptions" /> to the current object.
            </summary>
      <param name="source">The source object to copy properties from.</param>
    </member>
    <member name="P:C1.Win.C1Preview.ExporterOptions.OptionsDialogClassName">
      <summary>
            Gets or sets the class name of the export options dialog form.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.ExporterOptions.Enabled">
      <summary>
            Gets or sets a value indicating whether the exporter appears in the default "file save" dialog of a <see cref="T:C1.Win.C1Preview.C1PrintPreviewControl" />.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.ExporterOptions.ShowOptions">
      <summary>
            Gets or sets a value indicating whether to show the export options dialog to the user.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.ExporterOptions.Preview">
      <summary>
            Gets or sets a value indicating whether to preview the exported document.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.ExporterOptions.ExportProvider">
      <summary>
            Gets the <see cref="P:C1.Win.C1Preview.ExporterOptions.ExportProvider" /> object associated with this <see cref="T:C1.Win.C1Preview.ExporterOptions" />.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.ExporterOptions.TypeConverter">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PrintPreviewDialog">
      <summary>
            Displays a dialog box that shows the preview of the associated document.
            Includes toolbars, navigation panel and status bar.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewDialog.#ctor">
      <summary>
            Initializes a new instance of the C1PrintPreviewDialog class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PrintPreviewDialog.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewDialog.Document">
      <summary>
            Gets or sets the document shown by the dialog.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewDialog.AvailablePreviewActions">
      <summary>
            Gets or sets flags indicating which tools should be available in the preview.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewDialog.NavigationPanelVisible">
      <summary>
            Gets or sets a value indicating whether the navigation panel should be visible.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewDialog.StatusBarVisible">
      <summary>
            Gets or sets a value indicating whether the status bar should be visible.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewDialog.TextSearchPanelVisible">
      <summary>
            Gets or sets a value indicating whether the text search panel should be visible.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewDialog.PrintPreviewControl">
      <summary>
            Gets the C1PrintPreviewControl shown by the current print preview dialog.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewDialog.PreviewPane">
      <summary>
            Gets the preview pane.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewDialog.PreviewThumbnailView">
      <summary>
            Gets the preview thumbnails tspanel.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewDialog.PreviewOutlineView">
      <summary>
            Gets the preview outline tspanel.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewDialog.PreviewTextSearchPanel">
      <summary>
            Gets the preview text search tspanel.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewDialog.PreviewProgressBar">
      <summary>
            Gets the preview progress bar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewDialog.PreviewStatusText">
      <summary>
            Gets the preview progress bar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PrintPreviewDialog.DefaultMinimumSize">
      <summary>
            Gets the default minimum size of the control.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1PreviewToolsIntegrator">
      <summary>
            Provides integration of external tools (such as toolbars and status bar)
            with the preview pane, including handling of toolbar buttons.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewToolsIntegrator.c_PreviewProgressBarTag">
      <summary>
            Tag identifying the ToolStripProgressBar used to show preview progress.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewToolsIntegrator.c_PreviewStatusLabelTag">
      <summary>
            Tag identifying the ToolStripStatusLabel used to show preview status text.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1PreviewToolsIntegrator.c_PreviewSearchToolStripTag">
      <summary>
            Tag identifying the ToolStrip used to show search options.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewToolsIntegrator.#ctor">
      <summary>
            Creates a new instance of the class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewToolsIntegrator.AttachTools(System.Windows.Forms.Control)">
      <summary>
            Searches the controls tree and attaches to any tools found on it.
            </summary>
      <param name="control">The top level control, or a nested control on
            the form or control containing the tools that are to be integrated
            with the preview pane.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewToolsIntegrator.DetachTools">
      <summary>
            Detaches the tools integrator from all tools
            (but does not detach from the PreviewPane).
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewToolsIntegrator.AttachToolStrip(System.Windows.Forms.ToolStrip)">
      <summary>
            Attaches the tools integrator to the specified toolstrip.
            If the toolstrip contains preview items, they will be handled
            by the tools integrator.
            </summary>
      <param name="toolstrip">The toolstrip to attach to.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewToolsIntegrator.DetachToolStrip(System.Windows.Forms.ToolStrip)">
      <summary>
            Detaches the tools integrator from the specified toolstrip.
            </summary>
      <param name="toolstrip">The toolstrip to detach from.</param>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewToolsIntegrator.ToolStripItemByAction(C1.Win.C1Preview.C1PreviewActionEnum)">
      <summary>
            Gets the <see cref="T:System.Windows.Forms.ToolStripItem" /> associated with the specified action.
            </summary>
      <param name="action">A <see cref="T:C1.Win.C1Preview.C1PreviewActionEnum" /> value.</param>
      <returns>A <see cref="T:System.Windows.Forms.ToolStripItem" />, or <b>null</b>.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewToolsIntegrator.StateUpdate">
      <summary>
            Updates the current state of <see cref="T:System.Windows.Forms.ToolStripItem" /> items.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewToolsIntegrator.FileOpen">
      <summary>
            For internal use.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewToolsIntegrator.FileOpen(System.String)">
      <summary>
            For internal use.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewToolsIntegrator.FileSave">
      <summary>
            For internal use.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewToolsIntegrator.FileSave(System.String,C1.C1Preview.Export.ExportProvider)">
      <summary>
            For internal use.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewToolsIntegrator.Print">
      <summary>
            Shows the print dialog, allows the user to
            prints the document currently loaded into the <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
      <returns>
        <b>True</b> if the document was printed by the user, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.C1PreviewToolsIntegrator.Print(System.String)">
      <summary>
            Shows the print dialog, allows the user to print the document
            currently loaded into the <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
      <param name="printerName">The name of the printer that is to be initially selected in the print dialog.</param>
      <returns>
        <b>True</b> if the document was printed, <b>false</b> otherwise.</returns>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewToolsIntegrator.PreviewPane">
      <summary>
            Gets or sets the <see cref="T:C1.Win.C1Preview.C1PreviewPane" /> associated with the current
            <see cref="T:C1.Win.C1Preview.C1PreviewToolsIntegrator" />.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewToolsIntegrator.PreviewThumbnailView">
      <summary>
            Gets or sets the <see cref="T:C1.Win.C1Preview.C1PreviewThumbnailView" /> associated with the current
            <see cref="T:C1.Win.C1Preview.C1PreviewToolsIntegrator" />.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewToolsIntegrator.PreviewOutlineView">
      <summary>
            Gets or sets the <see cref="T:C1.Win.C1Preview.C1PreviewThumbnailView" /> associated with the current
            <see cref="T:C1.Win.C1Preview.C1PreviewToolsIntegrator" />.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewToolsIntegrator.TextSearchUIStyle">
      <summary>
            Gets or sets the type of UI used for text search.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewToolsIntegrator.SearchToolBarVisible">
      <summary>
            Gets or sets a value indicating whether the search toolbar is visible.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewToolsIntegrator.PreviewTextSearchPanel">
      <summary>
            Gets or sets the <see cref="T:C1.Win.C1Preview.C1PreviewTextSearchPanel" /> associated with the current
            <see cref="T:C1.Win.C1Preview.C1PreviewToolsIntegrator" />.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewToolsIntegrator.PreviewProgressBar">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Forms.ToolStripProgressBar" /> associated with the current
            <see cref="T:C1.Win.C1Preview.C1PreviewToolsIntegrator" />.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewToolsIntegrator.PreviewStatusText">
      <summary>
            Gets or sets the <see cref="T:System.Windows.Forms.ToolStripStatusLabel" /> associated with the current
            <see cref="T:C1.Win.C1Preview.C1PreviewToolsIntegrator" />.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewToolsIntegrator.AvailablePreviewActions">
      <summary>
            Gets or sets the flags indicating which tools should be available to the user.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewToolsIntegrator.PreviewNavigationPanel">
      <summary>
            Gets the control containing the preview thumbnail and outline panels.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewToolsIntegrator.NavigationPanelVisible">
      <summary>
            Gets or sets a value indicating whether the navigation panel is currently visible.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewToolsIntegrator.PreviewStatusBar">
      <summary>
            Gets the preview status bar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewToolsIntegrator.StatusBarVisible">
      <summary>
            Gets or sets a value indicating whether the status bar is currently visible.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.C1PreviewToolsIntegrator.ImageSet">
      <summary>
            Gets or sets a value indicating which set of predefined images is used by the preview toolbar.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.C1TextSearchArgs">
      <summary>
            Represents text search arguments,
            such as used by <see cref="M:C1.Win.C1Preview.C1PreviewPane.TextSearch(C1.Win.C1Preview.C1TextSearchArgs)" /> method.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1TextSearchArgs.Text">
      <summary>
            The search string.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1TextSearchArgs.Forward">
      <summary>
            Value indicating whether to search forward.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1TextSearchArgs.IgnoreCase">
      <summary>
            Value indicating whether to ignore case.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1TextSearchArgs.WholeWord">
      <summary>
            Value indicating whether to search for whole words only.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.C1TextSearchArgs.FromTop">
      <summary>
            Value indicating whether to search from the top of the document.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.ViewState">
      <summary>
            A structure containing information about a state of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />,
            such as scrolling position, zoom factor and so on.
            See also <see cref="P:C1.Win.C1Preview.ViewHistoryItem.ViewState" />.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ViewState.Continuous">
      <summary>
            Stores the value of the <see cref="P:C1.Win.C1Preview.C1PreviewPane.Continuous" /> property of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ViewState.PageLayout">
      <summary>
            Stores the value of the <see cref="P:C1.Win.C1Preview.C1PreviewPane.PageLayout" /> property of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ViewState.Cols">
      <summary>
            Stores the value of the <see cref="P:C1.Win.C1Preview.C1PreviewPane.Cols" /> property of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ViewState.Rows">
      <summary>
            Stores the value of the <see cref="P:C1.Win.C1Preview.C1PreviewPane.Rows" /> property of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ViewState.ZoomMode">
      <summary>
            Stores the value of the <see cref="P:C1.Win.C1Preview.C1PreviewPane.ZoomMode" /> property of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ViewState.ZoomFactor">
      <summary>
            Stores the value of the <see cref="P:C1.Win.C1Preview.C1PreviewPane.ZoomFactor" /> property of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ViewState.PreviewScrollPosition">
      <summary>
            Stores the value of the <see cref="P:C1.Win.C1Preview.C1PreviewPane.PreviewScrollPosition" /> property of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ViewState.HideMarginsState">
      <summary>
            Stores the value of the <see cref="P:C1.Win.C1Preview.C1PreviewPane.HideMarginsState" /> property of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ViewState.ShowRulers">
      <summary>
            Stores the value of the <see cref="P:C1.Win.C1Preview.C1PreviewPane.ShowRulers" /> property of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ViewState.ShowPrintableArea">
      <summary>
            Stores the value of the <see cref="P:C1.Win.C1Preview.C1PreviewPane.ShowPrintableArea" /> property of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ViewState.ShowPageOutline">
      <summary>
            Stores the value of the <see cref="P:C1.Win.C1Preview.C1PreviewPane.ShowPageOutline" /> property of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ViewState.PrintingLayout">
      <summary>
            Stores the value of the <see cref="P:C1.Win.C1Preview.C1PreviewPane.PrintingLayout" /> property of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.ViewState.CopyToPreviewPane(C1.Win.C1Preview.C1PreviewPane)">
      <summary>
            Copies values from the current <see cref="T:C1.Win.C1Preview.ViewState" /> to corresponding
            properties of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
      <param name="previewPane">The target <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.</param>
    </member>
    <member name="M:C1.Win.C1Preview.ViewState.Equals(System.Object)">
      <summary>
            Tests whether the current <see cref="T:C1.Win.C1Preview.ViewState" /> contains the same values
            as the specified object.
            </summary>
      <param name="obj">The value to test.</param>
      <returns>
        <b>True</b> if the two objects specify the same view state.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.ViewState.GetHashCode">
      <summary>
            Generates a hash code for the current <see cref="T:C1.Win.C1Preview.ViewState" />.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:C1.Win.C1Preview.ViewState.op_Equality(C1.Win.C1Preview.ViewState,C1.Win.C1Preview.ViewState)">
      <summary>
            Tests two <see cref="T:C1.Win.C1Preview.ViewState" /> values for equality.
            </summary>
      <param name="a">The first value to compare.</param>
      <param name="b">The second value to compare.</param>
      <returns>
        <b>true</b> if the values are equal, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.ViewState.op_Inequality(C1.Win.C1Preview.ViewState,C1.Win.C1Preview.ViewState)">
      <summary>
            Tests two <see cref="T:C1.Win.C1Preview.ViewState" /> values for non-equality.
            </summary>
      <param name="a">The first value to compare.</param>
      <param name="b">The second value to compare.</param>
      <returns>
        <b>true</b> if the values are non-equal, <b>false</b> otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.ViewState.CreateFromPreviewPane(C1.Win.C1Preview.C1PreviewPane)">
      <summary>
            Creates a <see cref="T:C1.Win.C1Preview.ViewState" /> value and fills it with the properties
            of a specified <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
      <param name="previewPane">The <see cref="T:C1.Win.C1Preview.C1PreviewPane" /> to store the properties of.</param>
      <returns>The created <see cref="T:C1.Win.C1Preview.ViewState" /> value.</returns>
    </member>
    <member name="T:C1.Win.C1Preview.ViewHistoryItem">
      <summary>
            Represents an item in a <see cref="T:C1.Win.C1Preview.ViewHistoryItemCollection" />.
            See also <see cref="P:C1.Win.C1Preview.C1PreviewPane.ViewHistory" /></summary>
    </member>
    <member name="P:C1.Win.C1Preview.ViewHistoryItem.Owner">
      <summary>
            Gets the <see cref="T:C1.Win.C1Preview.ViewHistoryItemCollection" /> containing the current history item.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.ViewHistoryItem.Pane">
      <summary>
            Gets the <see cref="T:C1.Win.C1Preview.C1PreviewPane" /> that is the owner of the
            <see cref="T:C1.Win.C1Preview.ViewHistoryItemCollection" /> containing the current history item.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.ViewHistoryItem.Caption">
      <summary>
            Gets the caption representing the current history item.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.ViewHistoryItem.ViewState">
      <summary>
            Gets the <see cref="T:C1.Win.C1Preview.ViewState" /> corresponding to the current history item.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.ViewHistoryItem.UserAction">
      <summary>
            Gets a value specifying what caused the current history item to be saved.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.ViewHistoryItem.VisitedDocument">
      <summary>
            Gets the visited document that was opened when the current history item was created.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.ViewHistoryItem.Index">
      <summary>
            Gets the index of the current history item in the containing collection.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.ViewHistoryItemCollection">
      <summary>
            Represents a collection of <see cref="T:C1.Win.C1Preview.ViewHistoryItem" /> objects.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.ViewHistoryItemCollection.#ctor(C1.Win.C1Preview.C1PreviewPane)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.ViewHistoryItemCollection" /> class.
            </summary>
      <param name="owner">The owner of the current collection.</param>
    </member>
    <member name="P:C1.Win.C1Preview.ViewHistoryItemCollection.Owner">
      <summary>
            Gets the <see cref="T:C1.Win.C1Preview.C1PreviewPane" /> containing the current collection.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.ViewHistoryItemCollection.Item(System.Int32)">
      <summary>
            Gets or sets the element at the specified index. 
            </summary>
      <param name="index">The index in the current collection.</param>
      <returns>The <see cref="T:C1.Win.C1Preview.ViewHistoryItem" /> element at the specified index.</returns>
    </member>
    <member name="T:C1.Win.C1Preview.HistorySavedActionsEnum">
      <summary>
            Enumerates kinds of changes in the state of the preview control
            (property changes or user actions) that cause the previous state
            of the control to be saved in history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.None">
      <summary>
            No actions are saved in the history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.Continuous">
      <summary>
            State before the Continuous property is changed is saved in history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.PageLayout">
      <summary>
            State before the PageLayout property is changed is saved in history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.Rows">
      <summary>
            State before the Rows property is changed is saved in history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.Cols">
      <summary>
            State before the Cols property is changed is saved in history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.HideMarginsState">
      <summary>
            State before the HideMarginsState property is changed is saved in history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.ShowRulers">
      <summary>
            State before the ShowRulers property is changed is saved in history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.ShowPrintableArea">
      <summary>
            State before the ShowPrintableArea property is changed is saved in history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.PrintingLayout">
      <summary>
            State before the PrintingLayout property is changed is saved in history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.PrinterSettings">
      <summary>
            State before the PrinterSettings property is changed is saved in history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.Layout">
      <summary>
            State before any of the layout-related properties is changed is saved in history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.ZoomMode">
      <summary>
            State before the ZoomMode property is changed is saved in history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.ZoomFactor">
      <summary>
            State before the ZoomFactor property is changed is saved in history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.Zoom">
      <summary>
            State before any of the zoom-related properties is changed is saved in history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.StartPageChange">
      <summary>
            State before the StartPageChange property is changed is saved in history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.HyperlinkJump">
      <summary>
            State before the HyperlinkJump property is changed is saved in history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.Scroll">
      <summary>
            State before the Scroll property is changed is saved in history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.TextSearch">
      <summary>
            State before the TextSearch property is changed is saved in history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.Location">
      <summary>
            State before any of the location-related properties is changed is saved in history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.DocumentOpen">
      <summary>
            State before a new document is opened is saved in history.
            </summary>
      <remarks>
            When triggered, this option saves the current document, and thus may cause delays
            and/or increase memory consumption, especially in the case of large documents.
            </remarks>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.DocumentReflow">
      <summary>
            State before reflow of the current document is saved in history.
            </summary>
      <remarks>
            When triggered, this option saves the current document, and thus may cause delays
            and/or increase memory consumption, especially in the case of large documents.
            </remarks>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.DocumentChangeMargins">
      <summary>
            State before margins on the current document are changed is saved in history.
            </summary>
      <remarks>
            When triggered, this option saves the current document, and thus may cause delays
            and/or increase memory consumption, especially in the case of large documents.
            </remarks>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.DocumentChangePageSettings">
      <summary>
            State before page settings on the current document are changed is saved in history.
            </summary>
      <remarks>
            When triggered, this option saves the current document, and thus may cause delays
            and/or increase memory consumption, especially in the case of large documents.
            </remarks>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.DocumentAction">
      <summary>
            State before any of the document-related changes occur is saved in history.
            </summary>
      <remarks>
            When triggered, all document-related actions save the current document, and thus may cause delays
            and/or increase memory consumption, especially in the case of large documents.
            </remarks>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.DocumentChangedAction">
      <summary>
            State before any of the document-related changes
            (except the opening of a new document) occur is saved in history.
            </summary>
      <remarks>
            When triggered, all document-related actions save the current document, and thus may cause delays
            and/or increase memory consumption, especially in the case of large documents.
            </remarks>
    </member>
    <member name="F:C1.Win.C1Preview.HistorySavedActionsEnum.All">
      <summary>
            State before any of the supported changes occur is saved in history.
            </summary>
      <remarks>
            Note that this option includes DocumentAction, which, when triggered,
            saves the current document, and thus may cause delays
            and/or increase memory consumption, especially in the case of large documents.
            </remarks>
    </member>
    <member name="T:C1.Win.C1Preview.VisitedDocumentStorageEnum">
      <summary>
            Specifies how visited documents are stored for the visited documents' history.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.VisitedDocumentStorageEnum.File">
      <summary>
            The visited document is stored in a temporary file.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.VisitedDocumentStorageEnum.Memory">
      <summary>
            The visited document is stored in a memory buffer.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.VisitedDocumentStorageEnum.User">
      <summary>
            The visited doocument is stored by the user.
            The user must handle the
            <see cref="E:C1.Win.C1Preview.C1PreviewPane.SaveVisitedDocument" />
            event.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.HistoryOptions">
      <summary>
            Represents the history-related options of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" /> control.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.HistoryOptions.#ctor(C1.Win.C1Preview.C1PreviewPane)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.HistoryOptions" /> class.
            </summary>
      <param name="previewPane">The owner <see cref="T:C1.Win.C1Preview.C1PreviewPane" /> control.</param>
    </member>
    <member name="M:C1.Win.C1Preview.HistoryOptions.OnPropertyChanged(System.String)">
      <summary>
            Fires <see cref="E:C1.Win.C1Preview.HistoryOptions.PropertyChanged" /> event.
            </summary>
      <param name="propertyName">The changed property name.</param>
    </member>
    <member name="M:C1.Win.C1Preview.HistoryOptions.AssignFrom(C1.Win.C1Preview.HistoryOptions)">
      <summary>
            Assigns (copies) properties from another <see cref="T:C1.Win.C1Preview.HistoryOptions" /> to the current object.
            </summary>
      <param name="source">The source object to copy properties from.</param>
    </member>
    <member name="P:C1.Win.C1Preview.HistoryOptions.PreviewPane">
      <summary>
            Gets the <see cref="T:C1.Win.C1Preview.C1PreviewPane" /> control associated with the current object.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.HistoryOptions.MaxHistoryLength">
      <summary>
            Gets or sets the maximum number of items stored in preview history.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.HistoryOptions.SavedActions">
      <summary>
            Gets or sets a value indicating which kinds of 
            actions are saved in the preview history.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.HistoryOptions.VisitedDocumentStorage">
      <summary>
            Gets or sets a value indicating how to store
            documents in the preview history.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.HistoryOptions.MaxVisitedDocuments">
      <summary>
            Gets or sets the maximum number of stored visited documents.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.HistoryOptions.PropertyChanged">
      <summary>
            Occurs when the value of a property of the current <see cref="T:C1.Win.C1Preview.HistoryOptions" /> has changed.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.VisitedDocument">
      <summary>
            Represents a document in the <see cref="P:C1.Win.C1Preview.C1PreviewPane.VisitedDocuments" /> collection
            of a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.VisitedDocument.GetFullDocumentCaption">
      <summary>
            Gets the caption representing the current visited document
            with description of the change that caused it to be saved appended.
            <para>
            For instance, if the current visited document was saved when
            the user changed page settings, the value of this property
            can be <b>"Document1 (page settings changed)"</b>.
            </para></summary>
    </member>
    <member name="M:C1.Win.C1Preview.VisitedDocument.CreateDocument">
      <summary>
            Creates an instance of the document that is stored in the current
            visited document.
            <para>
            Note that if the current visited document is linked with the document
            that is currently open in the preview pane, that document object
            is returned.
            </para></summary>
      <returns>The created document.</returns>
    </member>
    <member name="P:C1.Win.C1Preview.VisitedDocument.Owner">
      <summary>
            Gets the <see cref="T:C1.Win.C1Preview.VisitedDocumentCollection" /> containing the current visited document.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.VisitedDocument.Pane">
      <summary>
            Gets the <see cref="T:C1.Win.C1Preview.C1PreviewPane" /> that is the owner of the
            <see cref="T:C1.Win.C1Preview.VisitedDocumentCollection" /> containing the current visited document.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.VisitedDocument.DocumentCaption">
      <summary>
            Gets or sets the caption of the current visited document.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.VisitedDocument.HasAutoDocumentCaption">
      <summary>
            Gets a value indicating whether the current visited document has an
            automatically generated name.
            That name is changed when the document is saved to file.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.VisitedDocument.UserAction">
      <summary>
            Gets the action that caused the current visited document to be stored in history.
            This property is used to generate the string returned by the
            <see cref="M:C1.Win.C1Preview.VisitedDocument.GetFullDocumentCaption" /> method.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.VisitedDocument.Storage">
      <summary>
            Gets or sets the <see cref="T:C1.Win.C1Preview.VisitedDocumentStorage" /> object
            containing the data of the current visited document.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.VisitedDocument.Index">
      <summary>
            Gets the index of the current object in the containing collection.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.VisitedDocumentCollection">
      <summary>
            Represents a collection of <see cref="T:C1.Win.C1Preview.VisitedDocument" />
            objects (see <see cref="P:C1.Win.C1Preview.C1PreviewPane.VisitedDocuments" />).
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.VisitedDocumentCollection.#ctor(C1.Win.C1Preview.C1PreviewPane)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.C1Preview.TagStringInputParams" /> class.
            </summary>
      <param name="owner">The owner of the current collection.</param>
    </member>
    <member name="P:C1.Win.C1Preview.VisitedDocumentCollection.Owner">
      <summary>
            Gets the <see cref="T:C1.Win.C1Preview.C1PreviewPane" /> that is the owner of this collection.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.VisitedDocumentCollection.Item(System.Int32)">
      <summary>
            Gets or sets the element at the specified index. 
            </summary>
      <param name="index">The index in the current collection.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:C1.Win.C1Preview.PreviewHistoryOptions">
      <summary>
            Represents the history-related options of a <see cref="T:C1.Win.C1Preview.C1PrintPreviewControl" />.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewHistoryOptions.#ctor(C1.Win.C1Preview.C1PrintPreviewControl)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.PreviewHistoryOptions" /> class.
            </summary>
      <param name="owner">The owner <see cref="T:C1.Win.C1Preview.C1PrintPreviewControl" />.</param>
    </member>
    <member name="P:C1.Win.C1Preview.PreviewHistoryOptions.Owner">
      <summary>
            Gets the <see cref="T:C1.Win.C1Preview.C1PrintPreviewControl" /> associated with the current object.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.PreviewHistoryOptions.MaxHistoryMenuSize">
      <summary>
            Gets or sets the maximum number of items in history dropdown menus.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.PreviewHistoryOptions.MaxVisitedDocumentsMenuSize">
      <summary>
            Gets or sets the maximum number of previously visited documents in
            file open dropdown menu.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.ThumbnailNavigator">
      <summary>
            Provides navigation over a page thumbnail.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.ThumbnailNavigator.UpdateVisibleAreaEventArgs">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.ThumbnailNavigator.PanEventArgs">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.ThumbnailNavigator.ZoomEventArgs">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.ThumbnailNavigator.UpdateVisibleAreaEventHandler">
      <summary>
            For internal use.
            </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
    </member>
    <member name="T:C1.Win.C1Preview.ThumbnailNavigator.PanEventHandler">
      <summary>
            For internal use.
            </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
    </member>
    <member name="T:C1.Win.C1Preview.ThumbnailNavigator.ZoomEventHandler">
      <summary>
            For internal use.
            </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
    </member>
    <member name="T:C1.Win.C1Preview.ThumbnailNavigator.Op">
      <summary>
            For internal use.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ThumbnailNavigator.Op.None">
      <summary>
            No op.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ThumbnailNavigator.Op.Zoom">
      <summary>
            Zoom.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ThumbnailNavigator.Op.Pan">
      <summary>
            Pan.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.KeyMap">
      <summary>
            Represents a keymap used to map keystrokes to actions.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.KeyMap.AddHandler(System.Windows.Forms.Keys,C1.Win.C1Preview.KeyMap.DoAction)">
      <summary>
            Adds a handler to the keymap.
            </summary>
      <param name="keyData">The keystroke to map.</param>
      <param name="handler">The handler for the keystroke.</param>
    </member>
    <member name="M:C1.Win.C1Preview.KeyMap.SetHandler(System.Windows.Forms.Keys,C1.Win.C1Preview.KeyMap.DoAction)">
      <summary>
            Sets a handler to an existing key.
            </summary>
      <param name="keyData">The keystroke to map.</param>
      <param name="handler">The handler for the keystroke.</param>
    </member>
    <member name="M:C1.Win.C1Preview.KeyMap.ClearHandler(System.Windows.Forms.Keys)">
      <summary>
            Removes the handler for the specified keystroke from the keymap.
            </summary>
      <param name="keyData">The keystroke to remove.</param>
    </member>
    <member name="M:C1.Win.C1Preview.KeyMap.CanHandle(System.Windows.Forms.Keys)">
      <summary>
            Tests whether the current keymap can handle the keystroke.
            </summary>
      <param name="keyData">The keystroke to test.</param>
      <returns>True if the current keymap contains a handler for the keystroke, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.KeyMap.HandleKey(System.Windows.Forms.Keys)">
      <summary>
            Invokes the handler for the specified keystroke.
            </summary>
      <param name="keyData">The keystroke to handle.</param>
      <returns>The return value of the handler, false if it is not found.</returns>
    </member>
    <member name="P:C1.Win.C1Preview.KeyMap.Tag">
      <summary>
            Gets or sets user data associated with the keymap.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.KeyMap.DoAction">
      <summary>
            Describes an action that can be mapped to a keystroke.
            </summary>
      <returns>True to indicate that the expected action was taken, false otherwise.</returns>
    </member>
    <member name="T:C1.Win.C1Preview.KeyMapStack">
      <summary>
            Represents a stack of keymaps used to handle keyboard.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.KeyMapStack.Push(C1.Win.C1Preview.KeyMap)">
      <summary>
            Pushes a new keymap on the stack.
            </summary>
      <param name="keyMap">The keymap to push on the stack.</param>
    </member>
    <member name="M:C1.Win.C1Preview.KeyMapStack.Pop">
      <summary>
            Pops the top keymap from the stack.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.KeyMapStack.Top">
      <summary>
            Returns the top keymap.
            </summary>
      <returns>The top keymap.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.KeyMapStack.CanHandle(System.Windows.Forms.Keys)">
      <summary>
            Tests whether the stack contains a keymap that can handle the keystroke.
            </summary>
      <param name="keyData">The keystroke to test.</param>
      <returns>True if a handler is found, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.KeyMapStack.CanHandle(System.Windows.Forms.Keys,C1.Win.C1Preview.KeyMap@)">
      <summary>
            Tests whether the stack contains a keymap that can handle the keystroke.
            </summary>
      <param name="keyData">The keystroke to test.</param>
      <param name="keyMap">The keymap that can handle the keystroke.</param>
      <returns>True if a handler is found, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.KeyMapStack.HandleKey(System.Windows.Forms.Keys)">
      <summary>
            Handles a keystroke.
            </summary>
      <param name="keyData">The keystroke to handle.</param>
      <returns>True if the keystroke was handled, false otherwise.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.KeyMapStack.FindByTag(System.Object)">
      <summary>
            Finds a keymap by its tag.
            </summary>
      <param name="tag">The tag to search for.</param>
      <returns>The keymap or null if none was found.</returns>
    </member>
    <member name="P:C1.Win.C1Preview.KeyMapStack.IsEmpty">
      <summary>
            Gets the value indicating whether the stack is empty.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.PreviewPageExternal">
      <summary>
            Represents a page which is an image in an external (to the preview control) list.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPageExternal.#ctor(System.Collections.IList,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.PreviewPageExternal" /> class.
            </summary>
      <param name="list">The list that is the source of the page.</param>
      <param name="idx">Page index in the list.</param>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPageExternal.Finalize">
      <summary>
            Destructs the current object.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPageExternal.GetImage(System.Boolean)">
      <summary>
            Gets an image representing the current page.
            </summary>
      <param name="renderInputControls">This parameter is ignored.</param>
      <returns>The page image.</returns>
    </member>
    <member name="P:C1.Win.C1Preview.PreviewPageExternal.Index">
      <summary>
            Gets or sets the index of this page in the list.
            The index may need to be set to a different value e.g. if
            new pages were added to the list, or existing pages removed.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.PreviewPageSimple">
      <summary>
            Represents a page which is just an image.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPageSimple.#ctor(System.Drawing.Image)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.PreviewPageExternal" /> class.
            </summary>
      <param name="pageImage">The page image.</param>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPageSimple.Finalize">
      <summary>
            Destructs the current object.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPageSimple.GetImage(System.Boolean)">
      <summary>
            Gets an image representing the current page.
            </summary>
      <param name="renderInputControls">This parameter is ignored.</param>
      <returns>The page image.</returns>
    </member>
    <member name="T:C1.Win.C1Preview.VisitedDocumentStorageImages">
      <summary>
            Represents visited document storage for page lists.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.VisitedDocumentStorageImages.CreateDocument(System.IO.Stream)">
      <summary>
            Creates an instance of a previously saved visited document.
            </summary>
      <param name="stream">Input stream containing document data.</param>
      <returns>
        <see cref="T:System.Collections.ArrayList" /> of page images representing the visited document.</returns>
    </member>
    <member name="T:C1.Win.C1Preview.PagesChangeTypeEnum">
      <summary>
            Enumerates the types of changes to the <see cref="T:C1.Win.C1Preview.PreviewPages" /> collection
            (see <see cref="T:C1.Win.C1Preview.PagesChangeEventArgs" />).
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.PagesChangeTypeEnum.PageAppended">
      <summary>
            A page was appended to the end of the collection.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.PagesChangeTypeEnum.PageAdded">
      <summary>
            A page was added to the collection (not necessarily at the end).
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.PagesChangeTypeEnum.PageChanged">
      <summary>
            A page in the collection was changed.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.PagesChangeTypeEnum.PageDeleted">
      <summary>
            A page was removed from the collection.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.PagesChangeTypeEnum.PageMoved">
      <summary>
            A page was moved from one position in the collection to another.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.PagesChangeTypeEnum.Reset">
      <summary>
            The collection was changed.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.PagesChangeEventArgs">
      <summary>
            Provides data for the <see cref="E:C1.Win.C1Preview.PreviewPages.PagesChanged" />
            and <see cref="E:C1.Win.C1Preview.PreviewPages.PagesChanging" /> events.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.PagesChangeEventArgs.PagesChangeType">
      <summary>
            The type of <see cref="T:C1.Win.C1Preview.PreviewPages" /> collection change.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.PagesChangeEventArgs.NewIndex">
      <summary>
            New page index.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.PagesChangeEventArgs.OldIndex">
      <summary>
            Old page index.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.PagesChangeEventArgs.#ctor(C1.Win.C1Preview.PagesChangeTypeEnum)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.PagesChangeEventArgs" /> class.
            </summary>
      <param name="changeType">The collection change type.</param>
    </member>
    <member name="M:C1.Win.C1Preview.PagesChangeEventArgs.#ctor(C1.Win.C1Preview.PagesChangeTypeEnum,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.PagesChangeEventArgs" /> class.
            </summary>
      <param name="changeType">The collection change type.</param>
      <param name="newIndex">New page index.</param>
    </member>
    <member name="M:C1.Win.C1Preview.PagesChangeEventArgs.#ctor(C1.Win.C1Preview.PagesChangeTypeEnum,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.PagesChangeEventArgs" /> class.
            </summary>
      <param name="changeType">The collection change type.</param>
      <param name="newIndex">New page index.</param>
      <param name="oldIndex">Old page index.</param>
    </member>
    <member name="T:C1.Win.C1Preview.PagesChangeEventHandler">
      <summary>
            Represents a method that handles <see cref="E:C1.Win.C1Preview.PreviewPages.PagesChanged" />
            and <see cref="E:C1.Win.C1Preview.PreviewPages.PagesChanging" /> events.
            </summary>
      <param name="sender">The event source.</param>
      <param name="e">Event data.</param>
    </member>
    <member name="T:C1.Win.C1Preview.PreviewPrintEventArgs">
      <summary>
            Provides data for the <see cref="E:C1.Win.C1Preview.C1PreviewPane.PreviewPrint" /> event.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPrintEventArgs.#ctor(System.Windows.Forms.PrintDialog)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.PreviewPrintEventArgs" /> class.
            </summary>
      <param name="printDialog">The <see cref="T:System.Windows.Forms.PrintDialog" /> object related to the event.</param>
    </member>
    <member name="P:C1.Win.C1Preview.PreviewPrintEventArgs.PrintDialog">
      <summary>
            Gets the <see cref="T:System.Windows.Forms.PrintDialog" /> object related to the event.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.PreviewPrintEventHandler">
      <summary>
            Represents a method that handles the <see cref="E:C1.Win.C1Preview.C1PreviewPane.PreviewPrint" /> event.
            </summary>
      <param name="sender">The source of the event (usually an instance of the <see cref="T:C1.Win.C1Preview.C1PreviewPane" /> class).</param>
      <param name="e">A <see cref="T:C1.Win.C1Preview.PreviewPrintEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:C1.Win.C1Preview.UserActionEventArgs">
      <summary>
            Provides data for the <see cref="E:C1.Win.C1Preview.C1PreviewPane.UserAction" /> event.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.UserActionEventArgs.#ctor(C1.Win.C1Preview.C1PreviewActionEnum)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.UserActionEventArgs" /> class.
            </summary>
      <param name="previewAction">The <see cref="T:C1.Win.C1Preview.C1PreviewActionEnum" /> value related to the event.</param>
    </member>
    <member name="P:C1.Win.C1Preview.UserActionEventArgs.PreviewAction">
      <summary>
            Gets the <see cref="T:C1.Win.C1Preview.C1PreviewActionEnum" /> value related to the event.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.UserActionEventHandler">
      <summary>
            Represents a method that handles the <see cref="E:C1.Win.C1Preview.C1PreviewPane.UserAction" /> event.
            </summary>
      <param name="sender">The source of the event (usually an instance of the <see cref="T:C1.Win.C1Preview.C1PreviewPane" /> class).</param>
      <param name="e">A <see cref="T:C1.Win.C1Preview.UserActionEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:C1.Win.C1Preview.PreviewPageC1Doc">
      <summary>
            Represents a page of a <see cref="T:C1.C1Preview.C1PrintDocument" /> in
            a <see cref="T:C1.Win.C1Preview.PreviewPages" /> collection.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPageC1Doc.#ctor(C1.C1Preview.C1PrintDocument,System.Int32,System.Drawing.Drawing2D.SmoothingMode)">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.PreviewPageC1Doc" /> class.
            </summary>
      <param name="doc">The page owner document.</param>
      <param name="pageIdx">The page index.</param>
      <param name="smoothingMode">Smoothing mode to use when drawing the page.</param>
    </member>
    <member name="T:C1.Win.C1Preview.RulerUnits">
      <summary>
            Specifies measurement units used by the rulers.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.RulerUnits.Default">
      <summary>
            System default units for the current country/region are used.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.RulerUnits.Metric">
      <summary>
            Metric units are used.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.RulerUnits.Imperial">
      <summary>
            Imperial units are used.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.TextSearchUIStyle">
      <summary>
            Specifies the type of UI used for text search.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.TextSearchUIStyle.Panel">
      <summary>
            Use the default <see cref="T:C1.Win.C1Preview.C1PreviewTextSearchPanel" /> for text search.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.TextSearchUIStyle.ToolBar">
      <summary>
            Use the new search toolbar for text search.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.PageLayoutEnum">
      <summary>
            Describes the supported page view modes of the control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.PageLayoutEnum.Normal">
      <summary>
            Displays pages in the standard way, one beneath the other.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.PageLayoutEnum.Facing">
      <summary>
            Displays facing pages side by side, the first page on the right.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.PageLayoutEnum.Custom">
      <summary>
            Displays pages in a grid layout, where the number or rows and columns
            in the grid is determined by the Rows and Cols properties.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.ZoomModeEnum">
      <summary>
            Describes the supported zoom modes of C1PrintPreview control.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ZoomModeEnum.ActualSize">
      <summary>
            Pages are shown in actual size.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ZoomModeEnum.PageWidth">
      <summary>
            Pages are zoomed in or out as necessary to fit the page width in the preview window.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ZoomModeEnum.TextWidth">
      <summary>
            Pages are zoomed in or out as necessary to fit the content width in the preview window.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ZoomModeEnum.WholePage">
      <summary>
            Pages are zoomed in or out as necessary to fit the whole page in the preview window.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ZoomModeEnum.Custom">
      <summary>
            Custom zoom mode. The actual zoom factor is determined by the value of the
            <see cref="P:C1.Win.C1Preview.C1PreviewPane.ZoomFactor" />
            property.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.MouseModeEnum">
      <summary>
            Describes the supported preview pane mouse behavior modes.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.MouseModeEnum.None">
      <summary>
            No action is associated with the mouse.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.MouseModeEnum.Hand">
      <summary>
            Clicking and dragging with the mouse moves the document page within the preview window.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.MouseModeEnum.Zoom">
      <summary>
            Clicking and dragging with the mouse zooms into the rectangle upon mouse button release.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.MouseModeEnum.ZoomOut">
      <summary>
            Clicking and dragging with the mouse zooms out of the rectangle upon mouse button release.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.MouseModeEnum.Select">
      <summary>
            Clicking and dragging with the mouse selects text.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.HideMarginsFlags">
      <summary>
            Describes page margins hide/show modes (when the mouse is over the margins area).
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HideMarginsFlags.None">
      <summary>
            No margins are hidden.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HideMarginsFlags.Horizontal">
      <summary>
            Horizontal margins are hidden.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HideMarginsFlags.Vertical">
      <summary>
            Vertical margins are hidden.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.HideMarginsFlags.All">
      <summary>
            All margins are hidden.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.ShowRulersFlags">
      <summary>
            Describes which rulers are shown.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ShowRulersFlags.None">
      <summary>
            No rulers are displayed.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ShowRulersFlags.Horizontal">
      <summary>
            The horizontal ruler is displayed.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ShowRulersFlags.Vertical">
      <summary>
            The vertical ruler is displayed.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ShowRulersFlags.All">
      <summary>
            All rulers are displayed.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.ImageSetEnum">
      <summary>
            Describes the image set used for toolbar images of the
            preview actions.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ImageSetEnum.Classic">
      <summary>
            Classic image set.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ImageSetEnum.Flat">
      <summary>
            Flat image set.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ImageSetEnum.XP">
      <summary>
            XP image set.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ImageSetEnum.XP2">
      <summary>
            XP alternative image set.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ImageSetEnum.XP3">
      <summary>
            XP second alternative image set.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ImageSetEnum.Adobe">
      <summary>
            Adobe image set.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ImageSetEnum.OsX">
      <summary>
            Os X image set.
            </summary>
    </member>
    <member name="F:C1.Win.C1Preview.ImageSetEnum.Original">
      <summary>
            Original (C1Preview "classic") image set.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.PreviewPages">
      <summary>
            Represents the pages of a document that is being previewed in a <see cref="T:C1.Win.C1Preview.C1PreviewPane" />
            (see <see cref="P:C1.Win.C1Preview.C1PreviewPane.Pages" />).
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPages.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Preview.PreviewPages" /> class.
            </summary>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPages.Add(C1.Win.C1Preview.PreviewPageBase)">
      <summary>
            Adds a page to the current collection.
            </summary>
      <param name="page">The page to add.</param>
      <returns>Index of the newly added page in the current collection.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPages.AddRange(System.Collections.ICollection)">
      <summary>
            Adds a range of pages to the current collection.
            </summary>
      <param name="pages">The pages to add.</param>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPages.Remove(C1.Win.C1Preview.PreviewPageBase)">
      <summary>
            Removes a page from the current collection.
            </summary>
      <param name="page">The page to remove.</param>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPages.RemoveRange(System.Int32,System.Int32)">
      <summary>
            Removes a range of pages from the current collection.
            </summary>
      <param name="index">Index of the first page to remove.</param>
      <param name="count">The number of pages to remove.</param>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPages.Insert(System.Int32,C1.Win.C1Preview.PreviewPageBase)">
      <summary>
            Inserts a page into the current collection.
            </summary>
      <param name="index">Index at which to insert the page.</param>
      <param name="page">The page to insert.</param>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPages.InsertRange(System.Int32,System.Collections.ICollection)">
      <summary>
            Inserts a range of pages into the current collection.
            </summary>
      <param name="index">Index at which to insert the pages.</param>
      <param name="pages">The pages to insert.</param>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPages.IndexOf(C1.Win.C1Preview.PreviewPageBase)">
      <summary>
            Gets the index of a page in the current collection.
            </summary>
      <param name="page">The page to find the index of.</param>
      <returns>Index of <paramref name="page" /> in the current collection.</returns>
    </member>
    <member name="M:C1.Win.C1Preview.PreviewPages.ClonePageImages">
      <summary>
            Creates an array of page image clones.
            </summary>
      <returns>The array of page image clones.</returns>
    </member>
    <member name="E:C1.Win.C1Preview.PreviewPages.PagesChanging">
      <summary>
            Occurs when the current <see cref="T:C1.Win.C1Preview.PreviewPages" /> or one of its elements
            is about to change.
            </summary>
    </member>
    <member name="E:C1.Win.C1Preview.PreviewPages.PagesChanged">
      <summary>
            Occurs when the current <see cref="T:C1.Win.C1Preview.PreviewPages" /> or one of its elements
            has changed.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.PreviewPages.Item(System.Int32)">
      <summary>
            Gets or sets the element at the specified index. 
            </summary>
      <param name="index">The index in the current collection.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:C1.Win.C1Preview.PreviewPages.IsEmpty">
      <summary>
            Gets a value indicating whether the current collection of pages is empty.
            </summary>
    </member>
    <member name="T:C1.Win.C1Preview.PreviewToolTip">
      <summary>
            Describes a tooltip that can be attached to a large control,
            and set (e.g. from Cursor.get) depending on the current cursor
            location inside the control.
            </summary>
    </member>
    <member name="P:C1.Win.C1Preview.PreviewToolTip.Active">
      <summary>
            Gets or sets a value indicating whether tooltips are active.
            </summary>
    </member>
  </members>
</doc>